{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/povi.jpg","path":"images/povi.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/weed.png","path":"images/weed.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wildstyle.jpg","path":"images/wildstyle.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/background.jpeg","path":"images/background.jpeg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/images/color.jpg","path":"images/color.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/simpson.jpeg","path":"images/simpson.jpeg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1546940070047},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1546940070047},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1546940070047},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1546940070047},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1546940070047},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1546940070047},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1546940070047},{"_id":"source/CNAME","hash":"3534bfdf47e0eeafd30e02f563fae6d3c40b898d","modified":1546940070043},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1546940070047},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1546940070047},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1546940070047},{"_id":"themes/next/_config.yml","hash":"d3cb800faa6ce9be4c5a7c75fe5f89004a398928","modified":1546940070047},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1546940070047},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1546940070047},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1546940070047},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1546940070047},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1546940070051},{"_id":"source/_posts/Codeforces Round 538 (Div. 2).md","hash":"a6b90b8272cfc22717dcb368605fa6a79edf4e21","modified":1554628290874},{"_id":"source/_posts/Codeforces Round 541 (Div. 2).md","hash":"bd2d84105248a8059c4ae43e6d984a0e2a6f140b","modified":1554628290874},{"_id":"source/_posts/Educational Codeforces Round 58 D.md","hash":"6c862b2180f50fed0707bab1da02fa9930ac8d8c","modified":1548477218215},{"_id":"source/_posts/POJ-2406 Power string.md","hash":"f25034687552a259aacfe7312d6e06461a38f199","modified":1554628290874},{"_id":"source/about/index.md","hash":"aa443a70404333924c57b7cc4e8bcae37b3bf39c","modified":1546940070047},{"_id":"themes/next/layout/_layout.swig","hash":"a3263f03117766941675eea945301827d6711474","modified":1546940070047},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1546940070047},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1546940070047},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1546940070047},{"_id":"source/_posts/Codeforces Hello 2019 D.md","hash":"ec4a47606644fe5b85385d790045e3a660f9db6d","modified":1546948866640},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1546940070047},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1546940070051},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1546940070051},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1546940070047},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1546940070047},{"_id":"source/categories/index.md","hash":"b5ecc681c16d6bda5609f49359a2b5c35646f83a","modified":1546940070047},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1546940070051},{"_id":"source/tags/index.md","hash":"48ac6febb7735821db0501b070a03b76380d409a","modified":1546940070047},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1546940070047},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1546940070047},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1546940070047},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1546940070047},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1546940070047},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1546940070047},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1546940070047},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1546940070047},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1546940070047},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1546940070047},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1546940070047},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1546940070047},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1546940070047},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1546940070047},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1546940070047},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1546940070047},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1546940070063},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1546940070063},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1546940070063},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070051},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546940070047},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546940070047},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1546940070047},{"_id":"themes/next/layout/_partials/footer.swig","hash":"37f500e96c0844832940c3bafaa9978c0bbbf59c","modified":1546940070047},{"_id":"themes/next/layout/_partials/head.swig","hash":"76e4f3b1bb7488fa6b708bb8d7424eb0d23f7451","modified":1546940070047},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1546940070047},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1546940070047},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1546940070047},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1546940070047},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1546940070047},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1546940070047},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1546940070047},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1546940070047},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1546940070047},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1546940070047},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1546940070047},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1546940070047},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1546940070047},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1546940070047},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1546940070047},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1546940070047},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1546940070047},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1546940070051},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1546940070051},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1546940070051},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1546940070051},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1546940070051},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1546940070051},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1546940070051},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1546940070051},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1546940070051},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1546940070047},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1546940070047},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070047},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070047},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1546940070047},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1546940070051},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1546940070051},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1546940070051},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1546940070055},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1546940070055},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1546940070055},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1546940070055},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1546940070055},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1546940070055},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1546940070055},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1546940070055},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1546940070055},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546940070055},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1546940070055},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546940070055},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1546940070055},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1546940070055},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1546940070055},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070051},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070051},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070051},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070051},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546940070051},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1546940070047},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1546940070047},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1546940070047},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1546940070047},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1546940070047},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1546940070047},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1546940070047},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1546940070047},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1546940070047},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1546940070047},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1546940070047},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1546940070047},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1546940070047},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1546940070047},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1546940070047},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1546940070047},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1546940070051},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1546940070051},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1546940070051},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1546940070059},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1546940070059},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1546940070059},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1546940070059},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1546940070059},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1546940070059},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1546940070059},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1546940070059},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1546940070059},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1546940070059},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1546940070059},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1546940070051},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1546940070051},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"8d285f4751a97fcedf1ecc919a9ba22f06169d8f","modified":1546940070051},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1546940070051},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1546940070059},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1546940070059},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1546940070059},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1546940070059},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1546940070059},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1546940070059},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"2752bbe96288e7f38b971e730c18c5068aa38a91","modified":1546940070051},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1546940070059},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1546940070059},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1546940070063},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1546940070063},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1546940070063},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1546940070063},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1546940070063},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1546940070063},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1546940070063},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1546940070063},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1546940070063},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1546940070063},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1546940070063},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1546940070063},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1546940070063},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1546940070063},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1546940070063},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1546940070063},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1546940070063},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1546940070063},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1546940070063},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1546940070047},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1546940070047},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1546940070063},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1546940070047},{"_id":"themes/next/source/images/povi.jpg","hash":"42a8bbc586ff5f5656810795c6532b36e68dcb5a","modified":1546940070055},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1546940070051},{"_id":"themes/next/source/images/weed.png","hash":"56fbf079c8dfd9a6c94b8d1c58324c81051e7dd9","modified":1546940070059},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1546940070047},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1546940070051},{"_id":"themes/next/source/images/wildstyle.jpg","hash":"bbde6cbddfce4974a7f7175728a35b7c29e95b49","modified":1546940070059},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"24ed3b9e861200aed9bd3cf02e1256b8b25f49c8","modified":1546940070051},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1546940070051},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1546940070059},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1546940070059},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1546940070059},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1546940070051},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1546940070051},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1546940070051},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1546940070051},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1546940070051},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"1e7c534175495514193966c5cafa88c2a9e513a3","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d635e1c5849fdfb454c788349f7d46fa894739da","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1546940070051},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1546940070059},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1546940070059},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1546940070059},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1546940070051},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1546940070059},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1546940070063},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1546940070063},{"_id":"themes/next/source/images/background.jpeg","hash":"94cceda09cb4a2f95082e69f43290eff99cf9eac","modified":1546940070055},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1546940070059},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1546940070063},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1546940070063},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1546940070063},{"_id":"themes/next/source/images/color.jpg","hash":"1f7474677371ac862aa510e186d0e375f92aa711","modified":1546940070055},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1546940070051},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1546940070051},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546940070051},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1546940070059},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1546940070059},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1546940070059},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1546940070059},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1546940070059},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1546940070051},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1546940070059},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546940070051},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1546940070059},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1546940070059},{"_id":"themes/next/source/images/simpson.jpeg","hash":"0d50ff6181c5e3a7bba4215b793d696df9f59ed9","modified":1546940070059},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1546940070063},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1546940070063},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1546940070059},{"_id":"themes/next/source/images/avatar.png","hash":"88b37904940ee12e57a2cbf8875085ded96822e3","modified":1554628290874},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1546940070063},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1546940070063},{"_id":"source/_posts/SuffixArray.md","hash":"79d9c1c36e2a6d769152d04f4a0b45e48b5f334e","modified":1555250488181},{"_id":"public/about/index.html","hash":"a43f8423206532e084ddbf6c2a9d506dfffb46d2","modified":1555249869750},{"_id":"public/categories/index.html","hash":"c3d2e247e1c4b6e329db02e808a12c5fbb04fbb0","modified":1555249869750},{"_id":"public/tags/index.html","hash":"447b21323d96c508db22fcbc0e723e0145ca868f","modified":1555249869750},{"_id":"public/tags/數學/index.html","hash":"7d6718a6a27841d11e653d963505afa6de4355e3","modified":1555249869751},{"_id":"public/tags/DP/index.html","hash":"1f9b8b3a9614d77e46df62d96c15050512e521d7","modified":1555249869751},{"_id":"public/tags/樹/index.html","hash":"1fea2db94628a864721a2d8d143ba9ab69434de5","modified":1555249869751},{"_id":"public/tags/字符串/index.html","hash":"6fda730e694f2118c603a959853db40716e1f10c","modified":1555249869751},{"_id":"public/tags/圖論/index.html","hash":"7c37dfc04fd84d718d24c62aa7e9495d21db96e9","modified":1555249869751},{"_id":"public/categories/ACM/index.html","hash":"2f693c46a49dbb406b7c167ebd9e97a443e037a8","modified":1555249869751},{"_id":"public/archives/2019/01/index.html","hash":"63b34d32c446767fb1f4fd1788223e8580154c7f","modified":1555249869751},{"_id":"public/archives/2019/02/index.html","hash":"e317f8e0e756010a13ac0c59f1b318006d7c4f86","modified":1555249869751},{"_id":"public/archives/2019/04/index.html","hash":"6809fc96dfaf05e1668d8f04d5f64663b53b00c5","modified":1555249869751},{"_id":"public/2019/02/24/Codeforces Round 541 (Div. 2)/index.html","hash":"c2cea9c759e1c8a238b1b46b5a18f269df32aade","modified":1555249869751},{"_id":"public/2019/04/14/SuffixArray/index.html","hash":"6c436aa7db67eeef1ae35e7056536bfbb5e4eebf","modified":1555250592247},{"_id":"public/2019/02/17/Codeforces Round 538 (Div. 2)/index.html","hash":"fb2a5eed38e783314643c4fe18d3467f2552a437","modified":1555249869751},{"_id":"public/2019/01/26/POJ-2406 Power string/index.html","hash":"9f27e696a069e855911b04fa2ceb6acae0412747","modified":1555249869751},{"_id":"public/2019/01/07/Codeforces Hello 2019 D/index.html","hash":"f9e0231319a514f7dd9fc06e6d5d81de8b9ffebf","modified":1555249869751},{"_id":"public/2019/01/13/Educational Codeforces Round 58 D/index.html","hash":"41f9e01251aa577e1ff232efd95f999475bb6fc8","modified":1555249869751},{"_id":"public/index.html","hash":"d2debc806bd1b226e7d1a2cfb142b4c95c7e018c","modified":1555249869751},{"_id":"public/archives/index.html","hash":"aec1bc9378962a2cd061d6a80177f4c49b72e37e","modified":1555249869751},{"_id":"public/archives/2019/index.html","hash":"c477b7e8f4a95328d44ca5c12a918e5822d74fe2","modified":1555249869751},{"_id":"public/CNAME","hash":"3534bfdf47e0eeafd30e02f563fae6d3c40b898d","modified":1555249869756},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1555249869756},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1555249869756},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1555249869756},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1555249869756},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1555249869756},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1555249869756},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1555249869757},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1555249869757},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1555249869757},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1555249869757},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1555249869757},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555249869757},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1555249869757},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1555249869757},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1555249869757},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1555249869757},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1555249869757},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1555249869757},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1555249869757},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1555249869757},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1555249869757},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1555249869757},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1555249869757},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1555249869757},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1555249869757},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1555249869757},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1555249869757},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1555249869757},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1555249869757},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1555249869758},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1555249869758},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1555249869758},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1555249870488},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1555249870498},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1555249870498},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1555249870498},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1555249870499},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1555249870499},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1555249870499},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1555249870499},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1555249870499},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1555249870499},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1555249870499},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1555249870499},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1555249870499},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1555249870499},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1555249870499},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1555249870499},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1555249870499},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1555249870499},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1555249870500},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1555249870500},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1555249870500},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1555249870500},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1555249870500},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1555249870500},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1555249870500},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1555249870501},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1555249870501},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1555249870501},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1555249870501},{"_id":"public/lib/fastclick/README.html","hash":"c07b353b4efa132290ec4479102a55d80ac6d300","modified":1555249870501},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"06811ca2f722dead021493457f27cdc264ef928d","modified":1555249870501},{"_id":"public/lib/jquery_lazyload/README.html","hash":"a08fccd381c8fdb70ba8974b208254c5ba23a95f","modified":1555249870501},{"_id":"public/css/main.css","hash":"efbfbdb7eb133789ad002684babaf037ff764935","modified":1555249870501},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1555249870501},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1555249870501},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1555249870505},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1555249870505},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1555249870505},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1555249870505},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1555249870505},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1555249870505},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1555249870505},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1555249870505},{"_id":"public/images/povi.jpg","hash":"42a8bbc586ff5f5656810795c6532b36e68dcb5a","modified":1555249870505},{"_id":"public/images/weed.png","hash":"56fbf079c8dfd9a6c94b8d1c58324c81051e7dd9","modified":1555249870505},{"_id":"public/images/wildstyle.jpg","hash":"bbde6cbddfce4974a7f7175728a35b7c29e95b49","modified":1555249870505},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1555249870506},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1555249870506},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1555249870508},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1555249870508},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1555249870510},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1555249870510},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1555249870511},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1555249870511},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1555249870511},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1555249870511},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1555249870511},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1555249870511},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1555249870511},{"_id":"public/images/background.jpeg","hash":"94cceda09cb4a2f95082e69f43290eff99cf9eac","modified":1555249870519},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1555249870523},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1555249870523},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1555249870523},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1555249870525},{"_id":"public/images/simpson.jpeg","hash":"0d50ff6181c5e3a7bba4215b793d696df9f59ed9","modified":1555249870525},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1555249870525},{"_id":"public/images/color.jpg","hash":"1f7474677371ac862aa510e186d0e375f92aa711","modified":1555249870527},{"_id":"public/images/avatar.png","hash":"88b37904940ee12e57a2cbf8875085ded96822e3","modified":1555249870528},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1555249870533},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1555249870533},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1555249870535},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1555249870541},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1555249870550}],"Category":[{"name":"ACM","_id":"cjugu20e900027di169j9miwk"}],"Data":[],"Page":[{"date":"2019-01-07T05:09:00.000Z","_content":"\n# <center> WANNA KNOW ABOUT ME ?\n\n**<center>I'M COMING ~~SOON~~**\n\n**<center>FUNTER LIN**","source":"about/index.md","raw":"---\ndate: 2019-01-07 13:09:00\n---\n\n# <center> WANNA KNOW ABOUT ME ?\n\n**<center>I'M COMING ~~SOON~~**\n\n**<center>FUNTER LIN**","updated":"2019-01-08T09:34:30.047Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"cjugu20he000l7di1ku748czk","content":"<h1 id=\"WANNA-KNOW-ABOUT-ME\"><a href=\"#WANNA-KNOW-ABOUT-ME\" class=\"headerlink\" title=\" WANNA KNOW ABOUT ME ?\"></a><center> WANNA KNOW ABOUT ME ?</center></h1><p><strong><center>I’M COMING <del>SOON</del></center></strong></p>\n<p><strong><center>FUNTER LIN</center></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"WANNA-KNOW-ABOUT-ME\"><a href=\"#WANNA-KNOW-ABOUT-ME\" class=\"headerlink\" title=\" WANNA KNOW ABOUT ME ?\"></a><center> WANNA KNOW ABOUT ME ?</center></h1><p><strong><center>I’M COMING <del>SOON</del></center></strong></p>\n<p><strong><center>FUNTER LIN</center></strong></p>\n"},{"title":"categories","date":"2019-01-07T16:21:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-01-08 00:21:54\ntype: \"categories\"\n---\n","updated":"2019-01-08T09:34:30.047Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjugu20j2000w7di1hfipaxs6","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-01-07T16:19:44.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-01-08 00:19:44\ntype: \"tags\"\n---\n","updated":"2019-01-08T09:34:30.047Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjugu20j3000x7di180kvpu40","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Codeforces Round 538 (Div. 2)","date":"2019-02-17T08:56:34.000Z","mathjax":true,"_content":"## 簡要\n　**C是簡單的數論實用技巧，D是典型的區間DP，E是卡隨機數的交互題**\n  <!--more-->\n# C. Trailing Loves (or L'oeufs?)\n## 題意\n　　給出兩個數 $n$、$b$ ，求 $n!$ 用 $b$ 進制表示時末尾有幾個零\n  >　[題目入口](http://codeforces.com/contest/1114/problem/C)\n\n## 題解\n　　這裡的實質就是問 $n!$ 能整除 $b$ 多少次，這裡就有一個處理 $n!$ 的因子的技巧:\n那就是對每個因子的，計算 $[1,n]$ 中有幾個 $b$ 、$b^2$ 、$b^3$ ……的倍數，把所有的個數加起來，就是 $n!$ 里因子 $b$ 的次數\n\n## AC CODE\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nll n, b;\nvector<ll> fac,num;//fac素因子，num其對應的次數\n\nint main()\n{\n    cin>>n>>b;\n    for(ll i=2;i*i<=b;i++)\t\t//把b分解成素因子並記錄每個素因子的次數\n    {\n        if(b%i==0)\n        {\n            ll cnt=0;\n            while(b%i==0)\n            {\n                b/=i;\n                cnt++;\n            }\n            fac.push_back(i);\n\t\t\tnum.push_back(cnt);\n        }\n    }\n\n    if(b>1)\t\t//如果分解不完全\n\t{\n\t\tfac.push_back(b);\n\t\tnum.push_back(1);\n\t}\n\n    ll ans=0x3f3f3f3f3f3f3f3f;\n    for (int i=0;i<fac.size();++i)//對於每個因子\n    {\n        ll cnt=0;\n        ll t=n;\n        while(t)\t\n        {\n            cnt+=t/fac[i];\t// t裡面 fac[i] 的倍數的個數\n            t/=fac[i];\t\t//除以 fac[i] 之後是 下次是計算 fac[i] 的次數加一\n        }\n        cnt/=num[i];\t//最後該因子的個數，是b裡該因子的個數的幾倍\n        ans=min(ans,cnt);\t//取最小值就可以得到答案\n    }\n    if(fac.empty())\t\t//如果沒有因子\n        cout<<0<<endl;\n    else\n        cout<<ans<<endl;\n    return 0;\n}\n\n```\n\n## 後記\n這個處理 $n!$ 的因子的方法還是非常實用的\n\n# D. Flood Fill\n## 題意\n　　給出一排塗了顏色的東西，每次可以把一串連續的相同顏色的東西都變成另一種顏色，問最少操作幾次可以把整排東西變成相同的顏色\n  >　[題目入口](http://codeforces.com/contest/1114/problem/D)\n\n## 題解\n　　其實單獨兩種顏色來看，比如 $RB$ ，要麼變成 $RR$ ，要麼變成 $BB$ ，把一排都變成一種顏色，都是從局部的兩種顏色變成一種顏色，且要麼變成跟左邊的同顏色，要麼變成跟右邊的相同顏色，這裡就是典型的區間DP。  \n用 $dp[l][r][0]$ 表示從 $l$ 到 $r$ 邊成與左邊同色的最少次數，用 $dp[l][r][1]$ 表示從 $l$ 到 $r$ 邊成與右邊同色的最少次數，那麼轉移方程如下  \n\n<center> $dp[l][r][0]=min( dp[l+1][r][0]+(a[l]!=a[l+1]) , dp[l+1][r][1]+(a[l]!=a[r]) )$  \n\n<center> $dp[l][r][1]=min( dp[l][r-1][0]+(a[r]!=a[l]) , dp[l][r-1][1]+(a[r-1]!=a[r]) )$  \n\n枚舉長度和左端點來進行狀態轉移，就是一個 $O(n^2)$ 的算法\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 5050;\nint n;\nint a[N],dp[N][N][2];\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tfor(int i=2;i<=n;++i)\t//枚舉長度\n\t\tfor(int j=1;j+i-1<=n;++j)//枚舉左端點\n\t\t{\n\t\t\tint l=j,r=j+i-1;\n\t\t\tdp[l][r][0]=min(dp[l+1][r][0]+(a[l]!=a[l+1]),dp[l+1][r][1]+(a[l]!=a[r]));\n\t\t\tdp[l][r][1]=min(dp[l][r-1][0]+(a[r]!=a[l]),dp[l][r-1][1]+(a[r-1]!=a[r]));\n\t\t}\n\tcout<<min(dp[1][n][0],dp[1][n][1])<<endl;\n}\n\n```\n\n## 後記\n典型區間DP方式\n\n\n# E. Arithmetic Progression\n## 題意\n這是一道交互題。它有一個等差數列，但打亂了順序，告訴你有幾個數。可以有兩種提問\n1. \"$> x$\" 如果數列中有 $> x$ 的數，它輸出 $1$ ，否則輸出 $0$\n2. \"$?$ $i$\" 第 $i$ 個數的是什麼  \n\n你有60次提問機會，最後要告訴它最小的數，和這個等差數列的公差  \n\n  >　[題目入口](http://codeforces.com/contest/1114/problem/E)\n\n## 題解\n這題並沒有什麼特別的難點，直接用第一種提問在32次之內二分出數列的最大數，然後隨機提問第二個問題直到60次，把已知所有數兩兩作差$d_i$，求出所有$d_i$的GCD就是公差，就可算出最小的數了，這裡是一個求公差的小技巧  \n注意這裡的隨機，不用 mt19937 是過不了的！\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint n,f,cnt;\nset<int> s;\nint main()\n{\n\tcin>>n;\n\tint l=0,r=1e9,mid;\n\twhile(r-l>1)\t//二分求最大值\n\t{\n\t\tmid=(r+l)>>1;\n\t\tcout<<\"> \"<<mid<<endl;\n\t\tfflush(stdout);\n\t\tcin>>f;\n\t\tif(f==-1)\n\t\t\treturn 0;\n\t\tif(f)\n\t\t\tl=mid;\n\t\telse\n\t\t\tr=mid;\n\t\t++cnt;\n\t}\n\tmt19937 mt;\t//不用mt19937 ，用rand過不了\n\twhile(s.size()<n&&cnt<60)\t//隨機獲取數列裡的值\n\t{\n\t\tint i=mt()%n+1;\n\t\tcout<<\"? \"<<i<<endl;\n\t\tfflush(stdout);\n\t\tcin>>f;\n\t\tif(f==-1)\n\t\t\treturn 0;\n\t\ts.insert(f);\n\t\t++cnt;\n\t}\n\n\tint g=0;\n\tfor(set<int>::iterator i=s.begin();i!=s.end();++i)\n\t\tfor(set<int>::iterator j=s.begin();j!=s.end();++j)\n\t\t\tg=__gcd(g,abs(*i-*j));\n\tcout<<\"! \"<<r-(n-1)*g<<\" \"<<g<<endl;\n\treturn 0;\n}\n\n```\n\n## 後記\n記住求等差數列公差的小技巧，和，mt19937好用","source":"_posts/Codeforces Round 538 (Div. 2).md","raw":"---\ntitle: Codeforces Round 538 (Div. 2)\ndate: 2019-02-17 16:56:34\nmathjax: true\ntags: [數學,DP]\ncategories:\n- ACM\n---\n## 簡要\n　**C是簡單的數論實用技巧，D是典型的區間DP，E是卡隨機數的交互題**\n  <!--more-->\n# C. Trailing Loves (or L'oeufs?)\n## 題意\n　　給出兩個數 $n$、$b$ ，求 $n!$ 用 $b$ 進制表示時末尾有幾個零\n  >　[題目入口](http://codeforces.com/contest/1114/problem/C)\n\n## 題解\n　　這裡的實質就是問 $n!$ 能整除 $b$ 多少次，這裡就有一個處理 $n!$ 的因子的技巧:\n那就是對每個因子的，計算 $[1,n]$ 中有幾個 $b$ 、$b^2$ 、$b^3$ ……的倍數，把所有的個數加起來，就是 $n!$ 里因子 $b$ 的次數\n\n## AC CODE\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nll n, b;\nvector<ll> fac,num;//fac素因子，num其對應的次數\n\nint main()\n{\n    cin>>n>>b;\n    for(ll i=2;i*i<=b;i++)\t\t//把b分解成素因子並記錄每個素因子的次數\n    {\n        if(b%i==0)\n        {\n            ll cnt=0;\n            while(b%i==0)\n            {\n                b/=i;\n                cnt++;\n            }\n            fac.push_back(i);\n\t\t\tnum.push_back(cnt);\n        }\n    }\n\n    if(b>1)\t\t//如果分解不完全\n\t{\n\t\tfac.push_back(b);\n\t\tnum.push_back(1);\n\t}\n\n    ll ans=0x3f3f3f3f3f3f3f3f;\n    for (int i=0;i<fac.size();++i)//對於每個因子\n    {\n        ll cnt=0;\n        ll t=n;\n        while(t)\t\n        {\n            cnt+=t/fac[i];\t// t裡面 fac[i] 的倍數的個數\n            t/=fac[i];\t\t//除以 fac[i] 之後是 下次是計算 fac[i] 的次數加一\n        }\n        cnt/=num[i];\t//最後該因子的個數，是b裡該因子的個數的幾倍\n        ans=min(ans,cnt);\t//取最小值就可以得到答案\n    }\n    if(fac.empty())\t\t//如果沒有因子\n        cout<<0<<endl;\n    else\n        cout<<ans<<endl;\n    return 0;\n}\n\n```\n\n## 後記\n這個處理 $n!$ 的因子的方法還是非常實用的\n\n# D. Flood Fill\n## 題意\n　　給出一排塗了顏色的東西，每次可以把一串連續的相同顏色的東西都變成另一種顏色，問最少操作幾次可以把整排東西變成相同的顏色\n  >　[題目入口](http://codeforces.com/contest/1114/problem/D)\n\n## 題解\n　　其實單獨兩種顏色來看，比如 $RB$ ，要麼變成 $RR$ ，要麼變成 $BB$ ，把一排都變成一種顏色，都是從局部的兩種顏色變成一種顏色，且要麼變成跟左邊的同顏色，要麼變成跟右邊的相同顏色，這裡就是典型的區間DP。  \n用 $dp[l][r][0]$ 表示從 $l$ 到 $r$ 邊成與左邊同色的最少次數，用 $dp[l][r][1]$ 表示從 $l$ 到 $r$ 邊成與右邊同色的最少次數，那麼轉移方程如下  \n\n<center> $dp[l][r][0]=min( dp[l+1][r][0]+(a[l]!=a[l+1]) , dp[l+1][r][1]+(a[l]!=a[r]) )$  \n\n<center> $dp[l][r][1]=min( dp[l][r-1][0]+(a[r]!=a[l]) , dp[l][r-1][1]+(a[r-1]!=a[r]) )$  \n\n枚舉長度和左端點來進行狀態轉移，就是一個 $O(n^2)$ 的算法\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 5050;\nint n;\nint a[N],dp[N][N][2];\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tfor(int i=2;i<=n;++i)\t//枚舉長度\n\t\tfor(int j=1;j+i-1<=n;++j)//枚舉左端點\n\t\t{\n\t\t\tint l=j,r=j+i-1;\n\t\t\tdp[l][r][0]=min(dp[l+1][r][0]+(a[l]!=a[l+1]),dp[l+1][r][1]+(a[l]!=a[r]));\n\t\t\tdp[l][r][1]=min(dp[l][r-1][0]+(a[r]!=a[l]),dp[l][r-1][1]+(a[r-1]!=a[r]));\n\t\t}\n\tcout<<min(dp[1][n][0],dp[1][n][1])<<endl;\n}\n\n```\n\n## 後記\n典型區間DP方式\n\n\n# E. Arithmetic Progression\n## 題意\n這是一道交互題。它有一個等差數列，但打亂了順序，告訴你有幾個數。可以有兩種提問\n1. \"$> x$\" 如果數列中有 $> x$ 的數，它輸出 $1$ ，否則輸出 $0$\n2. \"$?$ $i$\" 第 $i$ 個數的是什麼  \n\n你有60次提問機會，最後要告訴它最小的數，和這個等差數列的公差  \n\n  >　[題目入口](http://codeforces.com/contest/1114/problem/E)\n\n## 題解\n這題並沒有什麼特別的難點，直接用第一種提問在32次之內二分出數列的最大數，然後隨機提問第二個問題直到60次，把已知所有數兩兩作差$d_i$，求出所有$d_i$的GCD就是公差，就可算出最小的數了，這裡是一個求公差的小技巧  \n注意這裡的隨機，不用 mt19937 是過不了的！\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint n,f,cnt;\nset<int> s;\nint main()\n{\n\tcin>>n;\n\tint l=0,r=1e9,mid;\n\twhile(r-l>1)\t//二分求最大值\n\t{\n\t\tmid=(r+l)>>1;\n\t\tcout<<\"> \"<<mid<<endl;\n\t\tfflush(stdout);\n\t\tcin>>f;\n\t\tif(f==-1)\n\t\t\treturn 0;\n\t\tif(f)\n\t\t\tl=mid;\n\t\telse\n\t\t\tr=mid;\n\t\t++cnt;\n\t}\n\tmt19937 mt;\t//不用mt19937 ，用rand過不了\n\twhile(s.size()<n&&cnt<60)\t//隨機獲取數列裡的值\n\t{\n\t\tint i=mt()%n+1;\n\t\tcout<<\"? \"<<i<<endl;\n\t\tfflush(stdout);\n\t\tcin>>f;\n\t\tif(f==-1)\n\t\t\treturn 0;\n\t\ts.insert(f);\n\t\t++cnt;\n\t}\n\n\tint g=0;\n\tfor(set<int>::iterator i=s.begin();i!=s.end();++i)\n\t\tfor(set<int>::iterator j=s.begin();j!=s.end();++j)\n\t\t\tg=__gcd(g,abs(*i-*j));\n\tcout<<\"! \"<<r-(n-1)*g<<\" \"<<g<<endl;\n\treturn 0;\n}\n\n```\n\n## 後記\n記住求等差數列公差的小技巧，和，mt19937好用","slug":"Codeforces Round 538 (Div. 2)","published":1,"updated":"2019-04-07T09:11:30.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjugu20e400007di1s4mt2zrq","content":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>C是簡單的數論實用技巧，D是典型的區間DP，E是卡隨機數的交互題</strong><br>  <a id=\"more\"></a></p>\n<h1 id=\"C-Trailing-Loves-or-L’oeufs\"><a href=\"#C-Trailing-Loves-or-L’oeufs\" class=\"headerlink\" title=\"C. Trailing Loves (or L’oeufs?)\"></a>C. Trailing Loves (or L’oeufs?)</h1><h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出兩個數 $n$、$b$ ，求 $n!$ 用 $b$ 進制表示時末尾有幾個零</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1114/problem/C\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>　　這裡的實質就是問 $n!$ 能整除 $b$ 多少次，這裡就有一個處理 $n!$ 的因子的技巧:<br>那就是對每個因子的，計算 $[1,n]$ 中有幾個 $b$ 、$b^2$ 、$b^3$ ……的倍數，把所有的個數加起來，就是 $n!$ 里因子 $b$ 的次數</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\">ll n, b;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;ll&gt; fac,num;<span class=\"comment\">//fac素因子，num其對應的次數</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;b;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">2</span>;i*i&lt;=b;i++)\t\t<span class=\"comment\">//把b分解成素因子並記錄每個素因子的次數</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ll cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(b%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                b/=i;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fac.push_back(i);</span><br><span class=\"line\">\t\t\tnum.push_back(cnt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b&gt;<span class=\"number\">1</span>)\t\t<span class=\"comment\">//如果分解不完全</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tfac.push_back(b);</span><br><span class=\"line\">\t\tnum.push_back(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ll ans=<span class=\"number\">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;fac.size();++i)<span class=\"comment\">//對於每個因子</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        ll t=n;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(t)\t</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cnt+=t/fac[i];\t<span class=\"comment\">// t裡面 fac[i] 的倍數的個數</span></span><br><span class=\"line\">            t/=fac[i];\t\t<span class=\"comment\">//除以 fac[i] 之後是 下次是計算 fac[i] 的次數加一</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cnt/=num[i];\t<span class=\"comment\">//最後該因子的個數，是b裡該因子的個數的幾倍</span></span><br><span class=\"line\">        ans=min(ans,cnt);\t<span class=\"comment\">//取最小值就可以得到答案</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(fac.empty())\t\t<span class=\"comment\">//如果沒有因子</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>這個處理 $n!$ 的因子的方法還是非常實用的</p>\n<h1 id=\"D-Flood-Fill\"><a href=\"#D-Flood-Fill\" class=\"headerlink\" title=\"D. Flood Fill\"></a>D. Flood Fill</h1><h2 id=\"題意-1\"><a href=\"#題意-1\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出一排塗了顏色的東西，每次可以把一串連續的相同顏色的東西都變成另一種顏色，問最少操作幾次可以把整排東西變成相同的顏色</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1114/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-1\"><a href=\"#題解-1\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>　　其實單獨兩種顏色來看，比如 $RB$ ，要麼變成 $RR$ ，要麼變成 $BB$ ，把一排都變成一種顏色，都是從局部的兩種顏色變成一種顏色，且要麼變成跟左邊的同顏色，要麼變成跟右邊的相同顏色，這裡就是典型的區間DP。<br>用 $dp[l][r][0]$ 表示從 $l$ 到 $r$ 邊成與左邊同色的最少次數，用 $dp[l][r][1]$ 表示從 $l$ 到 $r$ 邊成與右邊同色的最少次數，那麼轉移方程如下  </p>\n<p><center> $dp[l][r][0]=min( dp[l+1][r][0]+(a[l]!=a[l+1]) , dp[l+1][r][1]+(a[l]!=a[r]) )$  </center></p>\n<p><center> $dp[l][r][1]=min( dp[l][r-1][0]+(a[r]!=a[l]) , dp[l][r-1][1]+(a[r-1]!=a[r]) )$  </center></p>\n<p>枚舉長度和左端點來進行狀態轉移，就是一個 $O(n^2)$ 的算法</p>\n<h2 id=\"AC-CODE-1\"><a href=\"#AC-CODE-1\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">5050</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[N],dp[N][N][<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)\t<span class=\"comment\">//枚舉長度</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j+i<span class=\"number\">-1</span>&lt;=n;++j)<span class=\"comment\">//枚舉左端點</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> l=j,r=j+i<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\tdp[l][r][<span class=\"number\">0</span>]=min(dp[l+<span class=\"number\">1</span>][r][<span class=\"number\">0</span>]+(a[l]!=a[l+<span class=\"number\">1</span>]),dp[l+<span class=\"number\">1</span>][r][<span class=\"number\">1</span>]+(a[l]!=a[r]));</span><br><span class=\"line\">\t\t\tdp[l][r][<span class=\"number\">1</span>]=min(dp[l][r<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+(a[r]!=a[l]),dp[l][r<span class=\"number\">-1</span>][<span class=\"number\">1</span>]+(a[r<span class=\"number\">-1</span>]!=a[r]));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;min(dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>],dp[<span class=\"number\">1</span>][n][<span class=\"number\">1</span>])&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-1\"><a href=\"#後記-1\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>典型區間DP方式</p>\n<h1 id=\"E-Arithmetic-Progression\"><a href=\"#E-Arithmetic-Progression\" class=\"headerlink\" title=\"E. Arithmetic Progression\"></a>E. Arithmetic Progression</h1><h2 id=\"題意-2\"><a href=\"#題意-2\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>這是一道交互題。它有一個等差數列，但打亂了順序，告訴你有幾個數。可以有兩種提問</p>\n<ol>\n<li>“$&gt; x$” 如果數列中有 $&gt; x$ 的數，它輸出 $1$ ，否則輸出 $0$</li>\n<li>“$?$ $i$” 第 $i$ 個數的是什麼  </li>\n</ol>\n<p>你有60次提問機會，最後要告訴它最小的數，和這個等差數列的公差  </p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1114/problem/E\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-2\"><a href=\"#題解-2\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>這題並沒有什麼特別的難點，直接用第一種提問在32次之內二分出數列的最大數，然後隨機提問第二個問題直到60次，把已知所有數兩兩作差$d_i$，求出所有$d_i$的GCD就是公差，就可算出最小的數了，這裡是一個求公差的小技巧<br>注意這裡的隨機，不用 mt19937 是過不了的！</p>\n<h2 id=\"AC-CODE-2\"><a href=\"#AC-CODE-2\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,f,cnt;</span><br><span class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; s;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>,r=<span class=\"number\">1e9</span>,mid;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(r-l&gt;<span class=\"number\">1</span>)\t<span class=\"comment\">//二分求最大值</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmid=(r+l)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"&gt; \"</span>&lt;&lt;mid&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;f;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f==<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f)</span><br><span class=\"line\">\t\t\tl=mid;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tr=mid;</span><br><span class=\"line\">\t\t++cnt;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmt19937 mt;\t<span class=\"comment\">//不用mt19937 ，用rand過不了</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(s.size()&lt;n&amp;&amp;cnt&lt;<span class=\"number\">60</span>)\t<span class=\"comment\">//隨機獲取數列裡的值</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i=mt()%n+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"? \"</span>&lt;&lt;i&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;f;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f==<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ts.insert(f);</span><br><span class=\"line\">\t\t++cnt;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> g=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=s.begin();i!=s.end();++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator j=s.begin();j!=s.end();++j)</span><br><span class=\"line\">\t\t\tg=__gcd(g,<span class=\"built_in\">abs</span>(*i-*j));</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"! \"</span>&lt;&lt;r-(n<span class=\"number\">-1</span>)*g&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;g&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-2\"><a href=\"#後記-2\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>記住求等差數列公差的小技巧，和，mt19937好用</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>C是簡單的數論實用技巧，D是典型的區間DP，E是卡隨機數的交互題</strong><br>","more":"</p>\n<h1 id=\"C-Trailing-Loves-or-L’oeufs\"><a href=\"#C-Trailing-Loves-or-L’oeufs\" class=\"headerlink\" title=\"C. Trailing Loves (or L’oeufs?)\"></a>C. Trailing Loves (or L’oeufs?)</h1><h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出兩個數 $n$、$b$ ，求 $n!$ 用 $b$ 進制表示時末尾有幾個零</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1114/problem/C\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>　　這裡的實質就是問 $n!$ 能整除 $b$ 多少次，這裡就有一個處理 $n!$ 的因子的技巧:<br>那就是對每個因子的，計算 $[1,n]$ 中有幾個 $b$ 、$b^2$ 、$b^3$ ……的倍數，把所有的個數加起來，就是 $n!$ 里因子 $b$ 的次數</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\">ll n, b;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;ll&gt; fac,num;<span class=\"comment\">//fac素因子，num其對應的次數</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;b;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i=<span class=\"number\">2</span>;i*i&lt;=b;i++)\t\t<span class=\"comment\">//把b分解成素因子並記錄每個素因子的次數</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ll cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(b%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                b/=i;</span><br><span class=\"line\">                cnt++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            fac.push_back(i);</span><br><span class=\"line\">\t\t\tnum.push_back(cnt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b&gt;<span class=\"number\">1</span>)\t\t<span class=\"comment\">//如果分解不完全</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tfac.push_back(b);</span><br><span class=\"line\">\t\tnum.push_back(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ll ans=<span class=\"number\">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;fac.size();++i)<span class=\"comment\">//對於每個因子</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        ll t=n;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(t)\t</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cnt+=t/fac[i];\t<span class=\"comment\">// t裡面 fac[i] 的倍數的個數</span></span><br><span class=\"line\">            t/=fac[i];\t\t<span class=\"comment\">//除以 fac[i] 之後是 下次是計算 fac[i] 的次數加一</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cnt/=num[i];\t<span class=\"comment\">//最後該因子的個數，是b裡該因子的個數的幾倍</span></span><br><span class=\"line\">        ans=min(ans,cnt);\t<span class=\"comment\">//取最小值就可以得到答案</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(fac.empty())\t\t<span class=\"comment\">//如果沒有因子</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>這個處理 $n!$ 的因子的方法還是非常實用的</p>\n<h1 id=\"D-Flood-Fill\"><a href=\"#D-Flood-Fill\" class=\"headerlink\" title=\"D. Flood Fill\"></a>D. Flood Fill</h1><h2 id=\"題意-1\"><a href=\"#題意-1\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出一排塗了顏色的東西，每次可以把一串連續的相同顏色的東西都變成另一種顏色，問最少操作幾次可以把整排東西變成相同的顏色</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1114/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-1\"><a href=\"#題解-1\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>　　其實單獨兩種顏色來看，比如 $RB$ ，要麼變成 $RR$ ，要麼變成 $BB$ ，把一排都變成一種顏色，都是從局部的兩種顏色變成一種顏色，且要麼變成跟左邊的同顏色，要麼變成跟右邊的相同顏色，這裡就是典型的區間DP。<br>用 $dp[l][r][0]$ 表示從 $l$ 到 $r$ 邊成與左邊同色的最少次數，用 $dp[l][r][1]$ 表示從 $l$ 到 $r$ 邊成與右邊同色的最少次數，那麼轉移方程如下  </p>\n<p><center> $dp[l][r][0]=min( dp[l+1][r][0]+(a[l]!=a[l+1]) , dp[l+1][r][1]+(a[l]!=a[r]) )$  </center></p>\n<p><center> $dp[l][r][1]=min( dp[l][r-1][0]+(a[r]!=a[l]) , dp[l][r-1][1]+(a[r-1]!=a[r]) )$  </center></p>\n<p>枚舉長度和左端點來進行狀態轉移，就是一個 $O(n^2)$ 的算法</p>\n<h2 id=\"AC-CODE-1\"><a href=\"#AC-CODE-1\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">5050</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[N],dp[N][N][<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)\t<span class=\"comment\">//枚舉長度</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j+i<span class=\"number\">-1</span>&lt;=n;++j)<span class=\"comment\">//枚舉左端點</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> l=j,r=j+i<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\tdp[l][r][<span class=\"number\">0</span>]=min(dp[l+<span class=\"number\">1</span>][r][<span class=\"number\">0</span>]+(a[l]!=a[l+<span class=\"number\">1</span>]),dp[l+<span class=\"number\">1</span>][r][<span class=\"number\">1</span>]+(a[l]!=a[r]));</span><br><span class=\"line\">\t\t\tdp[l][r][<span class=\"number\">1</span>]=min(dp[l][r<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+(a[r]!=a[l]),dp[l][r<span class=\"number\">-1</span>][<span class=\"number\">1</span>]+(a[r<span class=\"number\">-1</span>]!=a[r]));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;min(dp[<span class=\"number\">1</span>][n][<span class=\"number\">0</span>],dp[<span class=\"number\">1</span>][n][<span class=\"number\">1</span>])&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-1\"><a href=\"#後記-1\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>典型區間DP方式</p>\n<h1 id=\"E-Arithmetic-Progression\"><a href=\"#E-Arithmetic-Progression\" class=\"headerlink\" title=\"E. Arithmetic Progression\"></a>E. Arithmetic Progression</h1><h2 id=\"題意-2\"><a href=\"#題意-2\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>這是一道交互題。它有一個等差數列，但打亂了順序，告訴你有幾個數。可以有兩種提問</p>\n<ol>\n<li>“$&gt; x$” 如果數列中有 $&gt; x$ 的數，它輸出 $1$ ，否則輸出 $0$</li>\n<li>“$?$ $i$” 第 $i$ 個數的是什麼  </li>\n</ol>\n<p>你有60次提問機會，最後要告訴它最小的數，和這個等差數列的公差  </p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1114/problem/E\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-2\"><a href=\"#題解-2\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>這題並沒有什麼特別的難點，直接用第一種提問在32次之內二分出數列的最大數，然後隨機提問第二個問題直到60次，把已知所有數兩兩作差$d_i$，求出所有$d_i$的GCD就是公差，就可算出最小的數了，這裡是一個求公差的小技巧<br>注意這裡的隨機，不用 mt19937 是過不了的！</p>\n<h2 id=\"AC-CODE-2\"><a href=\"#AC-CODE-2\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,f,cnt;</span><br><span class=\"line\"><span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt; s;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>,r=<span class=\"number\">1e9</span>,mid;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(r-l&gt;<span class=\"number\">1</span>)\t<span class=\"comment\">//二分求最大值</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tmid=(r+l)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"&gt; \"</span>&lt;&lt;mid&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;f;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f==<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f)</span><br><span class=\"line\">\t\t\tl=mid;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tr=mid;</span><br><span class=\"line\">\t\t++cnt;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tmt19937 mt;\t<span class=\"comment\">//不用mt19937 ，用rand過不了</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(s.size()&lt;n&amp;&amp;cnt&lt;<span class=\"number\">60</span>)\t<span class=\"comment\">//隨機獲取數列裡的值</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> i=mt()%n+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"? \"</span>&lt;&lt;i&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;f;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f==<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ts.insert(f);</span><br><span class=\"line\">\t\t++cnt;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> g=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator i=s.begin();i!=s.end();++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"built_in\">set</span>&lt;<span class=\"keyword\">int</span>&gt;::iterator j=s.begin();j!=s.end();++j)</span><br><span class=\"line\">\t\t\tg=__gcd(g,<span class=\"built_in\">abs</span>(*i-*j));</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"! \"</span>&lt;&lt;r-(n<span class=\"number\">-1</span>)*g&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;g&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-2\"><a href=\"#後記-2\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>記住求等差數列公差的小技巧，和，mt19937好用</p>"},{"title":"Educational Codeforces Round 58 D","date":"2019-01-13T12:19:41.000Z","mathjax":true,"_content":" ## 簡要\n　**樹上的數論DP，求多個數的GCD，想出的一下子不敢相信複雜度的算法，敢寫就能過**\n  <!--more-->\n  ## 題意\n　　給出一棵帶點權的樹，求出樹上最長的這樣的一條路徑：路徑上所有節點的 $GCD>1$。節點個數、節點權值的範圍都是 $[1,2e5$]。 \n  >　[題目入口](http://codeforces.com/contest/1101/problem/D)\n\n## 題解\n一開始感覺在 $2e5$ 的範圍里枚舉每個素數 $p$ 也就是枚舉 $GCD$ ，去求由所有被 $p$ 整除的節點構成是樹的最長路徑的做法，時間複雜度上是通不過的，因為 $[1,2e5]$ 里就已經有接近 $2e4$ 個素數，也就是要跑好多遍樹，就一直在思考有沒有別的辦法。  \n但真正的正確做法就真的是這樣，一開始對這個複雜度分析不夠到位。正解為：  \n1. 枚舉每一個素數因子,也就是枚舉 $GCD$\n2. 把帶有此因子的節點按原來的關係構成一些樹。\n3. 在這些樹上找最長路徑\n4. 所有的最長路徑中的最大值就是答案  \n\n\n用 $pn[N]$ 數組, $pn[i]$ 中裝帶有素因子 $i$ 的節點的編號。枚舉 $[1,2e5]$ 中每一個數，每一輪枚舉中，如果 $pn[i]$ 中有節點 $x$ ，就把他們字樹上標記出來：$vis[x]=i$   \n就是從每一個節點 $x$ 開始在樹上 $BFS$ ,只往帶有因子 $i$ 的節點前進，把這些節點都做上標記。這些被標記的節點按原來的樹的關係就構成了一些小樹。  \n這樣再找出這些小樹上的最長路徑，不斷記錄最大值，答案即可得到。\n  ## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5;\nint n;\n//v[i]節點i的權值，p[i]為數i的最小素因子，vis[i]標記\nint v[N],p[N],vis[N];\n//mp[i]是樹的關係圖，pn[i]里是含有因子i的節點編號\nvector<int> mp[N],pn[N];\n\nvoid getp()//篩出每個數的最小素因子\n{\n    for(int i=2;i<N;++i)\n    {\n        if(!p[i])\n        {\n            for(int j=i;j<N;j+=i)\n            {\n                if(!p[j])\n                    p[j]=i;\n            }\n        }\n    }\n}\npair<int,int> dfs(int np,int nx,int d,int f)//求DFS最深的點，和深度,返回：pair<點，深度>\n{\n    int mx=nx,md=d;\n    pair<int,int> re;\n    for(int i=0;i<mp[nx].size();++i)\n    {\n        int x=mp[nx][i];\n        if(vis[x]==np&&x!=f)\n        {\n            re=dfs(np,x,d+1,nx);\n            if(re.second>md)\n            {\n                md=re.second;\n                mx=re.first;\n            }\n        }\n    }\n    return make_pair(mx,md);\n}\nint longest(int np,int nx)//求樹上的最長路徑\n{\n    int t=dfs(np,nx,1,-1).first;//從任意一點找出最遠點\n    return dfs(np,t,1,-1).second;//從找出的最遠點出發，再找最遠點\n}\nint bfs(int np,int nx)\n{\n    queue<int> q;\n    q.push(nx);\n    vis[nx]=np;\n    while(!q.empty())//先BFS把帶有因子np的連通節點x標記為：vis[x]=np\n    {\n        int now=q.front();q.pop();\n        for(int i=0;i<mp[now].size();++i)\n        {\n            int x=mp[now][i];\n            if(vis[x]!=np&&!(v[x]%np))\n            {\n                q.push(x);\n                vis[x]=np;\n            }\n        }\n    }\n    return longest(np,nx);//找此聯通分量的最長路徑\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i)\n        scanf(\"%d\",&v[i]);\n    int u,w;\n    for(int i=1;i<n;++i)\n    {\n        scanf(\"%d%d\",&u,&w);\n        mp[u].push_back(w);\n        mp[w].push_back(u);\n    }\n    getp();//篩一下\n    for(int i=1;i<=n;++i)\n    {\n        int x=v[i];\n        while(x!=1)\n        {\n            int y=p[x];\n            pn[y].push_back(i);//每個質數y，記錄下能被y整除的節點i\n            while(!(x%y))\n                x/=y;\n        }\n    }\n    int ans=0;\n    for(int i=2;i<N;++i)//相當於枚舉每個素因子\n    {\n        if(pn[i].size()>0)//如果這個數是樹上某些節點的因子\n        {\n            for(int j=0;j<pn[i].size();++j)//對所有含有此因子的節點操作\n            {\n                int x=pn[i][j];\n                if(vis[x]!=i)\n                    ans=max(ans,bfs(i,x));//操作\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n\n```\n\n## 後記\n對複雜度的分析能力有待提高，不要被主觀複雜度判斷所欺騙而不敢下手","source":"_posts/Educational Codeforces Round 58 D.md","raw":"---\ntitle: Educational Codeforces Round 58 D\ndate: 2019-01-13 20:19:41\nmathjax: true\ntags: [數學,DP,樹]\ncategories:\n- ACM\n---\n ## 簡要\n　**樹上的數論DP，求多個數的GCD，想出的一下子不敢相信複雜度的算法，敢寫就能過**\n  <!--more-->\n  ## 題意\n　　給出一棵帶點權的樹，求出樹上最長的這樣的一條路徑：路徑上所有節點的 $GCD>1$。節點個數、節點權值的範圍都是 $[1,2e5$]。 \n  >　[題目入口](http://codeforces.com/contest/1101/problem/D)\n\n## 題解\n一開始感覺在 $2e5$ 的範圍里枚舉每個素數 $p$ 也就是枚舉 $GCD$ ，去求由所有被 $p$ 整除的節點構成是樹的最長路徑的做法，時間複雜度上是通不過的，因為 $[1,2e5]$ 里就已經有接近 $2e4$ 個素數，也就是要跑好多遍樹，就一直在思考有沒有別的辦法。  \n但真正的正確做法就真的是這樣，一開始對這個複雜度分析不夠到位。正解為：  \n1. 枚舉每一個素數因子,也就是枚舉 $GCD$\n2. 把帶有此因子的節點按原來的關係構成一些樹。\n3. 在這些樹上找最長路徑\n4. 所有的最長路徑中的最大值就是答案  \n\n\n用 $pn[N]$ 數組, $pn[i]$ 中裝帶有素因子 $i$ 的節點的編號。枚舉 $[1,2e5]$ 中每一個數，每一輪枚舉中，如果 $pn[i]$ 中有節點 $x$ ，就把他們字樹上標記出來：$vis[x]=i$   \n就是從每一個節點 $x$ 開始在樹上 $BFS$ ,只往帶有因子 $i$ 的節點前進，把這些節點都做上標記。這些被標記的節點按原來的樹的關係就構成了一些小樹。  \n這樣再找出這些小樹上的最長路徑，不斷記錄最大值，答案即可得到。\n  ## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5;\nint n;\n//v[i]節點i的權值，p[i]為數i的最小素因子，vis[i]標記\nint v[N],p[N],vis[N];\n//mp[i]是樹的關係圖，pn[i]里是含有因子i的節點編號\nvector<int> mp[N],pn[N];\n\nvoid getp()//篩出每個數的最小素因子\n{\n    for(int i=2;i<N;++i)\n    {\n        if(!p[i])\n        {\n            for(int j=i;j<N;j+=i)\n            {\n                if(!p[j])\n                    p[j]=i;\n            }\n        }\n    }\n}\npair<int,int> dfs(int np,int nx,int d,int f)//求DFS最深的點，和深度,返回：pair<點，深度>\n{\n    int mx=nx,md=d;\n    pair<int,int> re;\n    for(int i=0;i<mp[nx].size();++i)\n    {\n        int x=mp[nx][i];\n        if(vis[x]==np&&x!=f)\n        {\n            re=dfs(np,x,d+1,nx);\n            if(re.second>md)\n            {\n                md=re.second;\n                mx=re.first;\n            }\n        }\n    }\n    return make_pair(mx,md);\n}\nint longest(int np,int nx)//求樹上的最長路徑\n{\n    int t=dfs(np,nx,1,-1).first;//從任意一點找出最遠點\n    return dfs(np,t,1,-1).second;//從找出的最遠點出發，再找最遠點\n}\nint bfs(int np,int nx)\n{\n    queue<int> q;\n    q.push(nx);\n    vis[nx]=np;\n    while(!q.empty())//先BFS把帶有因子np的連通節點x標記為：vis[x]=np\n    {\n        int now=q.front();q.pop();\n        for(int i=0;i<mp[now].size();++i)\n        {\n            int x=mp[now][i];\n            if(vis[x]!=np&&!(v[x]%np))\n            {\n                q.push(x);\n                vis[x]=np;\n            }\n        }\n    }\n    return longest(np,nx);//找此聯通分量的最長路徑\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i)\n        scanf(\"%d\",&v[i]);\n    int u,w;\n    for(int i=1;i<n;++i)\n    {\n        scanf(\"%d%d\",&u,&w);\n        mp[u].push_back(w);\n        mp[w].push_back(u);\n    }\n    getp();//篩一下\n    for(int i=1;i<=n;++i)\n    {\n        int x=v[i];\n        while(x!=1)\n        {\n            int y=p[x];\n            pn[y].push_back(i);//每個質數y，記錄下能被y整除的節點i\n            while(!(x%y))\n                x/=y;\n        }\n    }\n    int ans=0;\n    for(int i=2;i<N;++i)//相當於枚舉每個素因子\n    {\n        if(pn[i].size()>0)//如果這個數是樹上某些節點的因子\n        {\n            for(int j=0;j<pn[i].size();++j)//對所有含有此因子的節點操作\n            {\n                int x=pn[i][j];\n                if(vis[x]!=i)\n                    ans=max(ans,bfs(i,x));//操作\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\n\n```\n\n## 後記\n對複雜度的分析能力有待提高，不要被主觀複雜度判斷所欺騙而不敢下手","slug":"Educational Codeforces Round 58 D","published":1,"updated":"2019-01-26T04:33:38.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjugu20e800017di149oxi0ec","content":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>樹上的數論DP，求多個數的GCD，想出的一下子不敢相信複雜度的算法，敢寫就能過</strong><br>  <a id=\"more\"></a></p>\n<h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出一棵帶點權的樹，求出樹上最長的這樣的一條路徑：路徑上所有節點的 $GCD&gt;1$。節點個數、節點權值的範圍都是 $[1,2e5$]。 </p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1101/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>一開始感覺在 $2e5$ 的範圍里枚舉每個素數 $p$ 也就是枚舉 $GCD$ ，去求由所有被 $p$ 整除的節點構成是樹的最長路徑的做法，時間複雜度上是通不過的，因為 $[1,2e5]$ 里就已經有接近 $2e4$ 個素數，也就是要跑好多遍樹，就一直在思考有沒有別的辦法。<br>但真正的正確做法就真的是這樣，一開始對這個複雜度分析不夠到位。正解為：  </p>\n<ol>\n<li>枚舉每一個素數因子,也就是枚舉 $GCD$</li>\n<li>把帶有此因子的節點按原來的關係構成一些樹。</li>\n<li>在這些樹上找最長路徑</li>\n<li>所有的最長路徑中的最大值就是答案  </li>\n</ol>\n<p>用 $pn[N]$ 數組, $pn[i]$ 中裝帶有素因子 $i$ 的節點的編號。枚舉 $[1,2e5]$ 中每一個數，每一輪枚舉中，如果 $pn[i]$ 中有節點 $x$ ，就把他們字樹上標記出來：$vis[x]=i$<br>就是從每一個節點 $x$ 開始在樹上 $BFS$ ,只往帶有因子 $i$ 的節點前進，把這些節點都做上標記。這些被標記的節點按原來的樹的關係就構成了一些小樹。<br>這樣再找出這些小樹上的最長路徑，不斷記錄最大值，答案即可得到。</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">3e5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"comment\">//v[i]節點i的權值，p[i]為數i的最小素因子，vis[i]標記</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N],p[N],vis[N];</span><br><span class=\"line\"><span class=\"comment\">//mp[i]是樹的關係圖，pn[i]里是含有因子i的節點編號</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; mp[N],pn[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getp</span><span class=\"params\">()</span><span class=\"comment\">//篩出每個數的最小素因子</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;N;++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!p[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&lt;N;j+=i)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!p[j])</span><br><span class=\"line\">                    p[j]=i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; dfs(<span class=\"keyword\">int</span> np,<span class=\"keyword\">int</span> nx,<span class=\"keyword\">int</span> d,<span class=\"keyword\">int</span> f)<span class=\"comment\">//求DFS最深的點，和深度,返回：pair&lt;點，深度&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mx=nx,md=d;</span><br><span class=\"line\">    pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; re;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;mp[nx].size();++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=mp[nx][i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[x]==np&amp;&amp;x!=f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            re=dfs(np,x,d+<span class=\"number\">1</span>,nx);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(re.second&gt;md)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                md=re.second;</span><br><span class=\"line\">                mx=re.first;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> make_pair(mx,md);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">longest</span><span class=\"params\">(<span class=\"keyword\">int</span> np,<span class=\"keyword\">int</span> nx)</span><span class=\"comment\">//求樹上的最長路徑</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t=dfs(np,nx,<span class=\"number\">1</span>,<span class=\"number\">-1</span>).first;<span class=\"comment\">//從任意一點找出最遠點</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dfs(np,t,<span class=\"number\">1</span>,<span class=\"number\">-1</span>).second;<span class=\"comment\">//從找出的最遠點出發，再找最遠點</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">(<span class=\"keyword\">int</span> np,<span class=\"keyword\">int</span> nx)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q;</span><br><span class=\"line\">    q.push(nx);</span><br><span class=\"line\">    vis[nx]=np;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())<span class=\"comment\">//先BFS把帶有因子np的連通節點x標記為：vis[x]=np</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> now=q.front();q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;mp[now].size();++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=mp[now][i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(vis[x]!=np&amp;&amp;!(v[x]%np))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                q.push(x);</span><br><span class=\"line\">                vis[x]=np;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> longest(np,nx);<span class=\"comment\">//找此聯通分量的最長路徑</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;v[i]);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> u,w;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;u,&amp;w);</span><br><span class=\"line\">        mp[u].push_back(w);</span><br><span class=\"line\">        mp[w].push_back(u);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    getp();<span class=\"comment\">//篩一下</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=v[i];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(x!=<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y=p[x];</span><br><span class=\"line\">            pn[y].push_back(i);<span class=\"comment\">//每個質數y，記錄下能被y整除的節點i</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!(x%y))</span><br><span class=\"line\">                x/=y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;N;++i)<span class=\"comment\">//相當於枚舉每個素因子</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pn[i].size()&gt;<span class=\"number\">0</span>)<span class=\"comment\">//如果這個數是樹上某些節點的因子</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;pn[i].size();++j)<span class=\"comment\">//對所有含有此因子的節點操作</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> x=pn[i][j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(vis[x]!=i)</span><br><span class=\"line\">                    ans=max(ans,bfs(i,x));<span class=\"comment\">//操作</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>對複雜度的分析能力有待提高，不要被主觀複雜度判斷所欺騙而不敢下手</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>樹上的數論DP，求多個數的GCD，想出的一下子不敢相信複雜度的算法，敢寫就能過</strong><br>","more":"</p>\n<h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出一棵帶點權的樹，求出樹上最長的這樣的一條路徑：路徑上所有節點的 $GCD&gt;1$。節點個數、節點權值的範圍都是 $[1,2e5$]。 </p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1101/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>一開始感覺在 $2e5$ 的範圍里枚舉每個素數 $p$ 也就是枚舉 $GCD$ ，去求由所有被 $p$ 整除的節點構成是樹的最長路徑的做法，時間複雜度上是通不過的，因為 $[1,2e5]$ 里就已經有接近 $2e4$ 個素數，也就是要跑好多遍樹，就一直在思考有沒有別的辦法。<br>但真正的正確做法就真的是這樣，一開始對這個複雜度分析不夠到位。正解為：  </p>\n<ol>\n<li>枚舉每一個素數因子,也就是枚舉 $GCD$</li>\n<li>把帶有此因子的節點按原來的關係構成一些樹。</li>\n<li>在這些樹上找最長路徑</li>\n<li>所有的最長路徑中的最大值就是答案  </li>\n</ol>\n<p>用 $pn[N]$ 數組, $pn[i]$ 中裝帶有素因子 $i$ 的節點的編號。枚舉 $[1,2e5]$ 中每一個數，每一輪枚舉中，如果 $pn[i]$ 中有節點 $x$ ，就把他們字樹上標記出來：$vis[x]=i$<br>就是從每一個節點 $x$ 開始在樹上 $BFS$ ,只往帶有因子 $i$ 的節點前進，把這些節點都做上標記。這些被標記的節點按原來的樹的關係就構成了一些小樹。<br>這樣再找出這些小樹上的最長路徑，不斷記錄最大值，答案即可得到。</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">3e5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"comment\">//v[i]節點i的權值，p[i]為數i的最小素因子，vis[i]標記</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> v[N],p[N],vis[N];</span><br><span class=\"line\"><span class=\"comment\">//mp[i]是樹的關係圖，pn[i]里是含有因子i的節點編號</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; mp[N],pn[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getp</span><span class=\"params\">()</span><span class=\"comment\">//篩出每個數的最小素因子</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;N;++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!p[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i;j&lt;N;j+=i)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!p[j])</span><br><span class=\"line\">                    p[j]=i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; dfs(<span class=\"keyword\">int</span> np,<span class=\"keyword\">int</span> nx,<span class=\"keyword\">int</span> d,<span class=\"keyword\">int</span> f)<span class=\"comment\">//求DFS最深的點，和深度,返回：pair&lt;點，深度&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mx=nx,md=d;</span><br><span class=\"line\">    pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; re;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;mp[nx].size();++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=mp[nx][i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[x]==np&amp;&amp;x!=f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            re=dfs(np,x,d+<span class=\"number\">1</span>,nx);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(re.second&gt;md)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                md=re.second;</span><br><span class=\"line\">                mx=re.first;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> make_pair(mx,md);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">longest</span><span class=\"params\">(<span class=\"keyword\">int</span> np,<span class=\"keyword\">int</span> nx)</span><span class=\"comment\">//求樹上的最長路徑</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t=dfs(np,nx,<span class=\"number\">1</span>,<span class=\"number\">-1</span>).first;<span class=\"comment\">//從任意一點找出最遠點</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dfs(np,t,<span class=\"number\">1</span>,<span class=\"number\">-1</span>).second;<span class=\"comment\">//從找出的最遠點出發，再找最遠點</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">bfs</span><span class=\"params\">(<span class=\"keyword\">int</span> np,<span class=\"keyword\">int</span> nx)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q;</span><br><span class=\"line\">    q.push(nx);</span><br><span class=\"line\">    vis[nx]=np;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())<span class=\"comment\">//先BFS把帶有因子np的連通節點x標記為：vis[x]=np</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> now=q.front();q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;mp[now].size();++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=mp[now][i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(vis[x]!=np&amp;&amp;!(v[x]%np))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                q.push(x);</span><br><span class=\"line\">                vis[x]=np;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> longest(np,nx);<span class=\"comment\">//找此聯通分量的最長路徑</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;v[i]);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> u,w;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;u,&amp;w);</span><br><span class=\"line\">        mp[u].push_back(w);</span><br><span class=\"line\">        mp[w].push_back(u);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    getp();<span class=\"comment\">//篩一下</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x=v[i];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(x!=<span class=\"number\">1</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y=p[x];</span><br><span class=\"line\">            pn[y].push_back(i);<span class=\"comment\">//每個質數y，記錄下能被y整除的節點i</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!(x%y))</span><br><span class=\"line\">                x/=y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;N;++i)<span class=\"comment\">//相當於枚舉每個素因子</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pn[i].size()&gt;<span class=\"number\">0</span>)<span class=\"comment\">//如果這個數是樹上某些節點的因子</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;pn[i].size();++j)<span class=\"comment\">//對所有含有此因子的節點操作</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> x=pn[i][j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(vis[x]!=i)</span><br><span class=\"line\">                    ans=max(ans,bfs(i,x));<span class=\"comment\">//操作</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>對複雜度的分析能力有待提高，不要被主觀複雜度判斷所欺騙而不敢下手</p>"},{"title":"POJ-2406 Power String","date":"2019-01-26T14:22:43.000Z","mathjax":true,"_content":" ## 簡要\n　**利用KMP的next數組性質，求字符串的最小循環節，KMP性質運用**\n  <!--more-->\n  ## 題意\n  求一個字符串的最小循環節，問這個循環節循環了幾次，無循環節就是循環了一次\n  >　[題目入口](http://poj.org/problem?id=2406)\n\n## 題解\nKMP的next數組的性質運用，下面是相關的兩個有用的結論 （ $len$ 為字符串長度）\n> KMP關於字符串循環節的結論  \n\n1. 如果字符串存在循環，則循環節的長度為 $L=len-next[len]$  \n循環的次數就為 $N=\\frac{len}{L}$  \n\n1. 如果不存在循環，那麼至少需要補充 $k$ 個字符構成循環 $k=len-next[len]$  \n\n> [具體的推導過程入口](https://www.cnblogs.com/chenxiwenruo/p/3546457.html)  \n\n\n於是這道題就直接得到解決了，計算出 $L=len-next[len]$ 看 $L$ 是否被 $len$ 整除，如果不能輸出1，如果能輸出 $\\frac{len}{L}$ 即可\n  ## AC CODE\n```c++\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N =1e6+7;\nchar s[N];\nint next[N];\nint len;\nvoid getnext()\n{\n\tmemset(next,0,sizeof(next));\n\tint j=0,k=-1;\n\tnext[0]=-1;\n\twhile(j<len)\n\t{\n\t\twhile(k!=-1&&s[j]!=s[k])\n\t\t\tk=next[k];\n\t\t++j;++k;\n\t\tnext[j]=k;\n\t}\n}\n\nint main()\n{\n\twhile(~scanf(\"%s\",s))\n\t{\n\t\tif(s[0]=='.')\n\t\t\tbreak;\n\t\tlen=strlen(s);\n\t\tgetnext();\n\t\tint l=len-next[len];\n\t\tif(len%l==0)\n\t\t\tprintf(\"%d\\n\",len/l);\n\t\telse\n\t\t\tputs(\"1\");\n\t}\n}\n\n```\n","source":"_posts/POJ-2406 Power string.md","raw":"---\ntitle: POJ-2406 Power String\ndate: 2019-01-26 22:22:43\nmathjax: true\ntags: [字符串]\ncategories:\n- ACM\n---\n ## 簡要\n　**利用KMP的next數組性質，求字符串的最小循環節，KMP性質運用**\n  <!--more-->\n  ## 題意\n  求一個字符串的最小循環節，問這個循環節循環了幾次，無循環節就是循環了一次\n  >　[題目入口](http://poj.org/problem?id=2406)\n\n## 題解\nKMP的next數組的性質運用，下面是相關的兩個有用的結論 （ $len$ 為字符串長度）\n> KMP關於字符串循環節的結論  \n\n1. 如果字符串存在循環，則循環節的長度為 $L=len-next[len]$  \n循環的次數就為 $N=\\frac{len}{L}$  \n\n1. 如果不存在循環，那麼至少需要補充 $k$ 個字符構成循環 $k=len-next[len]$  \n\n> [具體的推導過程入口](https://www.cnblogs.com/chenxiwenruo/p/3546457.html)  \n\n\n於是這道題就直接得到解決了，計算出 $L=len-next[len]$ 看 $L$ 是否被 $len$ 整除，如果不能輸出1，如果能輸出 $\\frac{len}{L}$ 即可\n  ## AC CODE\n```c++\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N =1e6+7;\nchar s[N];\nint next[N];\nint len;\nvoid getnext()\n{\n\tmemset(next,0,sizeof(next));\n\tint j=0,k=-1;\n\tnext[0]=-1;\n\twhile(j<len)\n\t{\n\t\twhile(k!=-1&&s[j]!=s[k])\n\t\t\tk=next[k];\n\t\t++j;++k;\n\t\tnext[j]=k;\n\t}\n}\n\nint main()\n{\n\twhile(~scanf(\"%s\",s))\n\t{\n\t\tif(s[0]=='.')\n\t\t\tbreak;\n\t\tlen=strlen(s);\n\t\tgetnext();\n\t\tint l=len-next[len];\n\t\tif(len%l==0)\n\t\t\tprintf(\"%d\\n\",len/l);\n\t\telse\n\t\t\tputs(\"1\");\n\t}\n}\n\n```\n","slug":"POJ-2406 Power string","published":1,"updated":"2019-04-07T09:11:30.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjugu20eb00047di1pzmk100o","content":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>利用KMP的next數組性質，求字符串的最小循環節，KMP性質運用</strong><br>  <a id=\"more\"></a></p>\n<h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>  求一個字符串的最小循環節，問這個循環節循環了幾次，無循環節就是循環了一次</p>\n<blockquote>\n<p>　<a href=\"http://poj.org/problem?id=2406\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>KMP的next數組的性質運用，下面是相關的兩個有用的結論 （ $len$ 為字符串長度）</p>\n<blockquote>\n<p>KMP關於字符串循環節的結論  </p>\n</blockquote>\n<ol>\n<li><p>如果字符串存在循環，則循環節的長度為 $L=len-next[len]$<br>循環的次數就為 $N=\\frac{len}{L}$  </p>\n</li>\n<li><p>如果不存在循環，那麼至少需要補充 $k$ 個字符構成循環 $k=len-next[len]$  </p>\n</li>\n</ol>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/chenxiwenruo/p/3546457.html\" target=\"_blank\" rel=\"noopener\">具體的推導過程入口</a>  </p>\n</blockquote>\n<p>於是這道題就直接得到解決了，計算出 $L=len-next[len]$ 看 $L$ 是否被 $len$ 整除，如果不能輸出1，如果能輸出 $\\frac{len}{L}$ 即可</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N =<span class=\"number\">1e6</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> next[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> len;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getnext</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(next,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(next));</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>,k=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\tnext[<span class=\"number\">0</span>]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&lt;len)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(k!=<span class=\"number\">-1</span>&amp;&amp;s[j]!=s[k])</span><br><span class=\"line\">\t\t\tk=next[k];</span><br><span class=\"line\">\t\t++j;++k;</span><br><span class=\"line\">\t\tnext[j]=k;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,s))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\tlen=<span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">\t\tgetnext();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=len-next[len];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(len%l==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,len/l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>利用KMP的next數組性質，求字符串的最小循環節，KMP性質運用</strong><br>","more":"</p>\n<h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>  求一個字符串的最小循環節，問這個循環節循環了幾次，無循環節就是循環了一次</p>\n<blockquote>\n<p>　<a href=\"http://poj.org/problem?id=2406\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>KMP的next數組的性質運用，下面是相關的兩個有用的結論 （ $len$ 為字符串長度）</p>\n<blockquote>\n<p>KMP關於字符串循環節的結論  </p>\n</blockquote>\n<ol>\n<li><p>如果字符串存在循環，則循環節的長度為 $L=len-next[len]$<br>循環的次數就為 $N=\\frac{len}{L}$  </p>\n</li>\n<li><p>如果不存在循環，那麼至少需要補充 $k$ 個字符構成循環 $k=len-next[len]$  </p>\n</li>\n</ol>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/chenxiwenruo/p/3546457.html\" target=\"_blank\" rel=\"noopener\">具體的推導過程入口</a>  </p>\n</blockquote>\n<p>於是這道題就直接得到解決了，計算出 $L=len-next[len]$ 看 $L$ 是否被 $len$ 整除，如果不能輸出1，如果能輸出 $\\frac{len}{L}$ 即可</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N =<span class=\"number\">1e6</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> next[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> len;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getnext</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(next,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(next));</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>,k=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\tnext[<span class=\"number\">0</span>]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(j&lt;len)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(k!=<span class=\"number\">-1</span>&amp;&amp;s[j]!=s[k])</span><br><span class=\"line\">\t\t\tk=next[k];</span><br><span class=\"line\">\t\t++j;++k;</span><br><span class=\"line\">\t\tnext[j]=k;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,s))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\tlen=<span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">\t\tgetnext();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=len-next[len];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(len%l==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,len/l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Codeforces Hello 2019 D","date":"2019-01-07T11:52:34.000Z","mathjax":true,"_content":" ## 簡要\n　**求數學期望，利用積性函數性質進行DP，從數學零基礎認識積性函數, %DYUME**\n  <!--more-->\n  ## 題意\n　　給出兩個數 $n$、$k$ ，$n$ 代表初始數字，$k$ 代表進行k次操作。  \n  每次操作：$n$ 等概率的變成它的因子，包括 $1$ 和 $n$ 本身，求 $k$ 次操作後得到的 $n$ 的期望值。  \n  >　[題目入口](https://codeforces.com/contest/1097/problem/D)\n\n## 題解\n　　用公式來描述，定 $f_{k}(x)$ 爲 $x$ 進行 $k$ 次後的期望，定 $m_{x}$ 爲 $x$ 因子個數（包括1和 $x$ 本身，下文同），$c_{i}$ 爲 $x$ 的因子，則所求的就是:  \n <center>$f_k\\left ( x \\right )= \\frac{1}{m_x}\\sum_{i=1}^{m_x}f_{k-1}\\left ( c_i \\right )$  \n\n本題的 $n$ 最大值 $1e15$ ，$k$ 最大值 $1e4$ ，$n$ 的因子可達數百個，若直接按上式逐個因子進行 $k$ 次遞推計算，顯然時間複雜度上不可行。  \n\n其實這是一個積性函數，但數學功底為零的我並不能證明。積性函數就意味著，若 $p_i$、$p_j$ 為互質的數，則有：  \n\n<center>$f_k\\left ( x \\right )= f_k\\left ( p_i \\right ) \\times f_k\\left ( p_j \\right )$\n\n於是可以把 $n$ 拆成素因子的冪次之積形式：  \n\n<center>$n=p{_{1}}^{a_1}p{_{2}}^{a_2}p{_{3}}^{a_3}...p{_{m}}^{a_m}$\n\n那麼每個**素因子的冪次**之間是互質的所以可以得到  \n\n<center>$f_k\\left ( x \\right )= f_k\\left ( p{_{1}}^{a_1} \\right ) \\times f_k\\left ( p{_{2}}^{a_2} \\right )\\times  f_k\\left ( p{_{3}}^{a_3} \\right ) \\times ...\\times f_k\\left ( p{_{m}}^{a_m} \\right )$  \n\n然後單獨計算出單個 $f_k\\left ( p{_{i}}^{a_i} \\right )$ 再利用積性函數的性質把所有的單個結果乘起來即可得到最終結果，接下來就是如何求出單個的 $f_k\\left ( p{_{i}}^{a_i} \\right )$ ，方法是DP\n### 如何DP\n對於每個 $f_k\\left ( p^a \\right )$ ，$p^a$ 的因子顯然也是 $p$ 的冪次，定義數組 $dp[i][j]$ 表示 $p^a$ 進行到第 $j$ 次時，結果為 $p^i$ , 即冪次為 $i$ 的概率。$j = 0$時顯然進行 $0$ 次數是本身，所以 $dp[a][0]=1$ ，對於第 $j-1$ 次時，冪次為 $i$ 的數，可以在第 $j$ 次時等概率成為 $[1 ，p^i]$ 中的任何任何一個 $p$ 的冪次，也就是有 $i+1$ 個等概率的結果，所以對於 $k$ 從 $0$ 到 $i$ ，$dp[k][j]+=dp[i][j-1] \\times \\frac{1}{i+1}$ 這樣DP的轉移方程就出來了，進行k次DP後得到各個結果的概率，求一下期望,現在就求出了單個 $f_k\\left ( p^a \\right )$ 的值，逐個對所有素因子都求一遍，結果乘起來就是結果了。  \n  \n  到此此題就做完了，以下是AC代碼:  \n\n  ## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1e9+7;\nll factor[200],findex[200];//factor[i]、findex[i]爲第ｉ個素因子和其次數\nll dp[100][10005],inv[1000];//dp[i][j]爲進行了j次後指數爲i的概率\nll n,k,cnt;//cnt爲素因子個數\nll ans;\nvoid getinv() //預處理逆元\n{\n\tinv[1]=1;\n\tfor(int i=2;i<1000;i++)\n\t\tinv[i]=(mod-mod/i)*inv[mod%i]%mod;\n}\nll DP(int now)\n{\n\tmemset(dp,0,sizeof(dp));\n\tdp[findex[now]][0]=1;//一次都沒走，只有一種可能,指數爲findex[now]\n\tfor(int i=1;i<=k;++i)//要進行k次\n\t{\n\t\tfor(int j=0;j<=findex[now];++j)//(i-1)次時指數爲j\n\t\t{\n\t\t\tif(dp[j][i-1])//如果(i-1)次時指數爲j有概率的話\n\t\t\t{\n\t\t\t\tfor(int l=0;l<=j;++l)//它可以轉移到第i次時指數<=j的狀態\n\t\t\t\t\tdp[l][i]=( dp[l][i] + (dp[j][i-1]*inv[j+1]%mod) )%mod;\n\t\t\t}\n\t\t}\n\t}\n\tll t=1,ret=0;\n\tfor(int i=0;i<=findex[now];++i)//用概率求期望\n\t{\n\t\tret=(ret+t*dp[i][k])%mod;\n\t\tt=t*factor[now]%mod;\n\t}\n\treturn ret;\n}\nint main()\n{\n\tgetinv();\n\tcin>>n>>k;\n\tfor(int i=2;i<=sqrt(n);++i)//先篩出素因子\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tfactor[++cnt]=i;\n\t\t\twhile(n%i==0)\n\t\t\t{\n\t\t\t\tn/=i;\n\t\t\t\t++findex[cnt];//記錄每個素因子的次數\n\t\t\t}\n\t\t}\n\t}\n\tif(n>1)\n\t{\n\t\tfactor[++cnt]=n;\n\t\tfindex[cnt]=1;\n\t}\n\tans=1;\n\tfor(int i=1;i<=cnt;++i)//每個素因子分別DP\n\t\tans=ans*DP(i)%mod;\n\tcout<<ans<<endl;\n}\n\n```\n\n## 後記\n通過本題，零基礎開始對數學有了一點點了解：\n>積性函數的性質  \n>* $f(1)==1$  \n>* $f(c)=f(a)\\times f(b)$.........$a,b$互質時(若不互質時為完全積性函數)\n\n以此可以優化一些數學題，類似情形複雜度優化不下來是時可往這個方向思考。","source":"_posts/Codeforces Hello 2019 D.md","raw":"---\ntitle: Codeforces Hello 2019 D\ndate: 2019-01-07 19:52:34\nmathjax: true\ntags: [數學,DP]\ncategories:\n- ACM\n---\n ## 簡要\n　**求數學期望，利用積性函數性質進行DP，從數學零基礎認識積性函數, %DYUME**\n  <!--more-->\n  ## 題意\n　　給出兩個數 $n$、$k$ ，$n$ 代表初始數字，$k$ 代表進行k次操作。  \n  每次操作：$n$ 等概率的變成它的因子，包括 $1$ 和 $n$ 本身，求 $k$ 次操作後得到的 $n$ 的期望值。  \n  >　[題目入口](https://codeforces.com/contest/1097/problem/D)\n\n## 題解\n　　用公式來描述，定 $f_{k}(x)$ 爲 $x$ 進行 $k$ 次後的期望，定 $m_{x}$ 爲 $x$ 因子個數（包括1和 $x$ 本身，下文同），$c_{i}$ 爲 $x$ 的因子，則所求的就是:  \n <center>$f_k\\left ( x \\right )= \\frac{1}{m_x}\\sum_{i=1}^{m_x}f_{k-1}\\left ( c_i \\right )$  \n\n本題的 $n$ 最大值 $1e15$ ，$k$ 最大值 $1e4$ ，$n$ 的因子可達數百個，若直接按上式逐個因子進行 $k$ 次遞推計算，顯然時間複雜度上不可行。  \n\n其實這是一個積性函數，但數學功底為零的我並不能證明。積性函數就意味著，若 $p_i$、$p_j$ 為互質的數，則有：  \n\n<center>$f_k\\left ( x \\right )= f_k\\left ( p_i \\right ) \\times f_k\\left ( p_j \\right )$\n\n於是可以把 $n$ 拆成素因子的冪次之積形式：  \n\n<center>$n=p{_{1}}^{a_1}p{_{2}}^{a_2}p{_{3}}^{a_3}...p{_{m}}^{a_m}$\n\n那麼每個**素因子的冪次**之間是互質的所以可以得到  \n\n<center>$f_k\\left ( x \\right )= f_k\\left ( p{_{1}}^{a_1} \\right ) \\times f_k\\left ( p{_{2}}^{a_2} \\right )\\times  f_k\\left ( p{_{3}}^{a_3} \\right ) \\times ...\\times f_k\\left ( p{_{m}}^{a_m} \\right )$  \n\n然後單獨計算出單個 $f_k\\left ( p{_{i}}^{a_i} \\right )$ 再利用積性函數的性質把所有的單個結果乘起來即可得到最終結果，接下來就是如何求出單個的 $f_k\\left ( p{_{i}}^{a_i} \\right )$ ，方法是DP\n### 如何DP\n對於每個 $f_k\\left ( p^a \\right )$ ，$p^a$ 的因子顯然也是 $p$ 的冪次，定義數組 $dp[i][j]$ 表示 $p^a$ 進行到第 $j$ 次時，結果為 $p^i$ , 即冪次為 $i$ 的概率。$j = 0$時顯然進行 $0$ 次數是本身，所以 $dp[a][0]=1$ ，對於第 $j-1$ 次時，冪次為 $i$ 的數，可以在第 $j$ 次時等概率成為 $[1 ，p^i]$ 中的任何任何一個 $p$ 的冪次，也就是有 $i+1$ 個等概率的結果，所以對於 $k$ 從 $0$ 到 $i$ ，$dp[k][j]+=dp[i][j-1] \\times \\frac{1}{i+1}$ 這樣DP的轉移方程就出來了，進行k次DP後得到各個結果的概率，求一下期望,現在就求出了單個 $f_k\\left ( p^a \\right )$ 的值，逐個對所有素因子都求一遍，結果乘起來就是結果了。  \n  \n  到此此題就做完了，以下是AC代碼:  \n\n  ## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll mod=1e9+7;\nll factor[200],findex[200];//factor[i]、findex[i]爲第ｉ個素因子和其次數\nll dp[100][10005],inv[1000];//dp[i][j]爲進行了j次後指數爲i的概率\nll n,k,cnt;//cnt爲素因子個數\nll ans;\nvoid getinv() //預處理逆元\n{\n\tinv[1]=1;\n\tfor(int i=2;i<1000;i++)\n\t\tinv[i]=(mod-mod/i)*inv[mod%i]%mod;\n}\nll DP(int now)\n{\n\tmemset(dp,0,sizeof(dp));\n\tdp[findex[now]][0]=1;//一次都沒走，只有一種可能,指數爲findex[now]\n\tfor(int i=1;i<=k;++i)//要進行k次\n\t{\n\t\tfor(int j=0;j<=findex[now];++j)//(i-1)次時指數爲j\n\t\t{\n\t\t\tif(dp[j][i-1])//如果(i-1)次時指數爲j有概率的話\n\t\t\t{\n\t\t\t\tfor(int l=0;l<=j;++l)//它可以轉移到第i次時指數<=j的狀態\n\t\t\t\t\tdp[l][i]=( dp[l][i] + (dp[j][i-1]*inv[j+1]%mod) )%mod;\n\t\t\t}\n\t\t}\n\t}\n\tll t=1,ret=0;\n\tfor(int i=0;i<=findex[now];++i)//用概率求期望\n\t{\n\t\tret=(ret+t*dp[i][k])%mod;\n\t\tt=t*factor[now]%mod;\n\t}\n\treturn ret;\n}\nint main()\n{\n\tgetinv();\n\tcin>>n>>k;\n\tfor(int i=2;i<=sqrt(n);++i)//先篩出素因子\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tfactor[++cnt]=i;\n\t\t\twhile(n%i==0)\n\t\t\t{\n\t\t\t\tn/=i;\n\t\t\t\t++findex[cnt];//記錄每個素因子的次數\n\t\t\t}\n\t\t}\n\t}\n\tif(n>1)\n\t{\n\t\tfactor[++cnt]=n;\n\t\tfindex[cnt]=1;\n\t}\n\tans=1;\n\tfor(int i=1;i<=cnt;++i)//每個素因子分別DP\n\t\tans=ans*DP(i)%mod;\n\tcout<<ans<<endl;\n}\n\n```\n\n## 後記\n通過本題，零基礎開始對數學有了一點點了解：\n>積性函數的性質  \n>* $f(1)==1$  \n>* $f(c)=f(a)\\times f(b)$.........$a,b$互質時(若不互質時為完全積性函數)\n\n以此可以優化一些數學題，類似情形複雜度優化不下來是時可往這個方向思考。","slug":"Codeforces Hello 2019 D","published":1,"updated":"2019-01-08T12:01:06.640Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjugu20hf000m7di1lmve24l1","content":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>求數學期望，利用積性函數性質進行DP，從數學零基礎認識積性函數, %DYUME</strong><br>  <a id=\"more\"></a></p>\n<h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出兩個數 $n$、$k$ ，$n$ 代表初始數字，$k$ 代表進行k次操作。<br>  每次操作：$n$ 等概率的變成它的因子，包括 $1$ 和 $n$ 本身，求 $k$ 次操作後得到的 $n$ 的期望值。  </p>\n<blockquote>\n<p>　<a href=\"https://codeforces.com/contest/1097/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>　　用公式來描述，定 $f_{k}(x)$ 爲 $x$ 進行 $k$ 次後的期望，定 $m_{x}$ 爲 $x$ 因子個數（包括1和 $x$ 本身，下文同），$c_{i}$ 爲 $x$ 的因子，則所求的就是:<br> <center>$f_k\\left ( x \\right )= \\frac{1}{m_x}\\sum_{i=1}^{m_x}f_{k-1}\\left ( c_i \\right )$  </center></p>\n<p>本題的 $n$ 最大值 $1e15$ ，$k$ 最大值 $1e4$ ，$n$ 的因子可達數百個，若直接按上式逐個因子進行 $k$ 次遞推計算，顯然時間複雜度上不可行。  </p>\n<p>其實這是一個積性函數，但數學功底為零的我並不能證明。積性函數就意味著，若 $p_i$、$p_j$ 為互質的數，則有：  </p>\n<p><center>$f_k\\left ( x \\right )= f_k\\left ( p_i \\right ) \\times f_k\\left ( p_j \\right )$</center></p>\n<p>於是可以把 $n$ 拆成素因子的冪次之積形式：  </p>\n<p><center>$n=p{_{1}}^{a_1}p{_{2}}^{a_2}p{_{3}}^{a_3}…p{_{m}}^{a_m}$</center></p>\n<p>那麼每個<strong>素因子的冪次</strong>之間是互質的所以可以得到  </p>\n<p><center>$f_k\\left ( x \\right )= f_k\\left ( p{_{1}}^{a_1} \\right ) \\times f_k\\left ( p{_{2}}^{a_2} \\right )\\times  f_k\\left ( p{_{3}}^{a_3} \\right ) \\times …\\times f_k\\left ( p{_{m}}^{a_m} \\right )$  </center></p>\n<p>然後單獨計算出單個 $f_k\\left ( p{_{i}}^{a_i} \\right )$ 再利用積性函數的性質把所有的單個結果乘起來即可得到最終結果，接下來就是如何求出單個的 $f_k\\left ( p{_{i}}^{a_i} \\right )$ ，方法是DP</p>\n<h3 id=\"如何DP\"><a href=\"#如何DP\" class=\"headerlink\" title=\"如何DP\"></a>如何DP</h3><p>對於每個 $f_k\\left ( p^a \\right )$ ，$p^a$ 的因子顯然也是 $p$ 的冪次，定義數組 $dp[i][j]$ 表示 $p^a$ 進行到第 $j$ 次時，結果為 $p^i$ , 即冪次為 $i$ 的概率。$j = 0$時顯然進行 $0$ 次數是本身，所以 $dp[a][0]=1$ ，對於第 $j-1$ 次時，冪次為 $i$ 的數，可以在第 $j$ 次時等概率成為 $[1 ，p^i]$ 中的任何任何一個 $p$ 的冪次，也就是有 $i+1$ 個等概率的結果，所以對於 $k$ 從 $0$ 到 $i$ ，$dp[k][j]+=dp[i][j-1] \\times \\frac{1}{i+1}$ 這樣DP的轉移方程就出來了，進行k次DP後得到各個結果的概率，求一下期望,現在就求出了單個 $f_k\\left ( p^a \\right )$ 的值，逐個對所有素因子都求一遍，結果乘起來就是結果了。  </p>\n<p>  到此此題就做完了，以下是AC代碼:  </p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll mod=<span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\">ll factor[<span class=\"number\">200</span>],findex[<span class=\"number\">200</span>];<span class=\"comment\">//factor[i]、findex[i]爲第ｉ個素因子和其次數</span></span><br><span class=\"line\">ll dp[<span class=\"number\">100</span>][<span class=\"number\">10005</span>],inv[<span class=\"number\">1000</span>];<span class=\"comment\">//dp[i][j]爲進行了j次後指數爲i的概率</span></span><br><span class=\"line\">ll n,k,cnt;<span class=\"comment\">//cnt爲素因子個數</span></span><br><span class=\"line\">ll ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getinv</span><span class=\"params\">()</span> <span class=\"comment\">//預處理逆元</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tinv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;<span class=\"number\">1000</span>;i++)</span><br><span class=\"line\">\t\tinv[i]=(mod-mod/i)*inv[mod%i]%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">DP</span><span class=\"params\">(<span class=\"keyword\">int</span> now)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">\tdp[findex[now]][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;<span class=\"comment\">//一次都沒走，只有一種可能,指數爲findex[now]</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;++i)<span class=\"comment\">//要進行k次</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=findex[now];++j)<span class=\"comment\">//(i-1)次時指數爲j</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dp[j][i<span class=\"number\">-1</span>])<span class=\"comment\">//如果(i-1)次時指數爲j有概率的話</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>;l&lt;=j;++l)<span class=\"comment\">//它可以轉移到第i次時指數&lt;=j的狀態</span></span><br><span class=\"line\">\t\t\t\t\tdp[l][i]=( dp[l][i] + (dp[j][i<span class=\"number\">-1</span>]*inv[j+<span class=\"number\">1</span>]%mod) )%mod;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tll t=<span class=\"number\">1</span>,ret=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=findex[now];++i)<span class=\"comment\">//用概率求期望</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tret=(ret+t*dp[i][k])%mod;</span><br><span class=\"line\">\t\tt=t*factor[now]%mod;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tgetinv();</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"built_in\">sqrt</span>(n);++i)<span class=\"comment\">//先篩出素因子</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfactor[++cnt]=i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(n%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tn/=i;</span><br><span class=\"line\">\t\t\t\t++findex[cnt];<span class=\"comment\">//記錄每個素因子的次數</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tfactor[++cnt]=n;</span><br><span class=\"line\">\t\tfindex[cnt]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tans=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=cnt;++i)<span class=\"comment\">//每個素因子分別DP</span></span><br><span class=\"line\">\t\tans=ans*DP(i)%mod;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>通過本題，零基礎開始對數學有了一點點了解：</p>\n<blockquote>\n<p>積性函數的性質  </p>\n<ul>\n<li>$f(1)==1$  </li>\n<li>$f(c)=f(a)\\times f(b)$………$a,b$互質時(若不互質時為完全積性函數)</li>\n</ul>\n</blockquote>\n<p>以此可以優化一些數學題，類似情形複雜度優化不下來是時可往這個方向思考。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>求數學期望，利用積性函數性質進行DP，從數學零基礎認識積性函數, %DYUME</strong><br>","more":"</p>\n<h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出兩個數 $n$、$k$ ，$n$ 代表初始數字，$k$ 代表進行k次操作。<br>  每次操作：$n$ 等概率的變成它的因子，包括 $1$ 和 $n$ 本身，求 $k$ 次操作後得到的 $n$ 的期望值。  </p>\n<blockquote>\n<p>　<a href=\"https://codeforces.com/contest/1097/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>　　用公式來描述，定 $f_{k}(x)$ 爲 $x$ 進行 $k$ 次後的期望，定 $m_{x}$ 爲 $x$ 因子個數（包括1和 $x$ 本身，下文同），$c_{i}$ 爲 $x$ 的因子，則所求的就是:<br> <center>$f_k\\left ( x \\right )= \\frac{1}{m_x}\\sum_{i=1}^{m_x}f_{k-1}\\left ( c_i \\right )$  </center></p>\n<p>本題的 $n$ 最大值 $1e15$ ，$k$ 最大值 $1e4$ ，$n$ 的因子可達數百個，若直接按上式逐個因子進行 $k$ 次遞推計算，顯然時間複雜度上不可行。  </p>\n<p>其實這是一個積性函數，但數學功底為零的我並不能證明。積性函數就意味著，若 $p_i$、$p_j$ 為互質的數，則有：  </p>\n<p><center>$f_k\\left ( x \\right )= f_k\\left ( p_i \\right ) \\times f_k\\left ( p_j \\right )$</center></p>\n<p>於是可以把 $n$ 拆成素因子的冪次之積形式：  </p>\n<p><center>$n=p{_{1}}^{a_1}p{_{2}}^{a_2}p{_{3}}^{a_3}…p{_{m}}^{a_m}$</center></p>\n<p>那麼每個<strong>素因子的冪次</strong>之間是互質的所以可以得到  </p>\n<p><center>$f_k\\left ( x \\right )= f_k\\left ( p{_{1}}^{a_1} \\right ) \\times f_k\\left ( p{_{2}}^{a_2} \\right )\\times  f_k\\left ( p{_{3}}^{a_3} \\right ) \\times …\\times f_k\\left ( p{_{m}}^{a_m} \\right )$  </center></p>\n<p>然後單獨計算出單個 $f_k\\left ( p{_{i}}^{a_i} \\right )$ 再利用積性函數的性質把所有的單個結果乘起來即可得到最終結果，接下來就是如何求出單個的 $f_k\\left ( p{_{i}}^{a_i} \\right )$ ，方法是DP</p>\n<h3 id=\"如何DP\"><a href=\"#如何DP\" class=\"headerlink\" title=\"如何DP\"></a>如何DP</h3><p>對於每個 $f_k\\left ( p^a \\right )$ ，$p^a$ 的因子顯然也是 $p$ 的冪次，定義數組 $dp[i][j]$ 表示 $p^a$ 進行到第 $j$ 次時，結果為 $p^i$ , 即冪次為 $i$ 的概率。$j = 0$時顯然進行 $0$ 次數是本身，所以 $dp[a][0]=1$ ，對於第 $j-1$ 次時，冪次為 $i$ 的數，可以在第 $j$ 次時等概率成為 $[1 ，p^i]$ 中的任何任何一個 $p$ 的冪次，也就是有 $i+1$ 個等概率的結果，所以對於 $k$ 從 $0$ 到 $i$ ，$dp[k][j]+=dp[i][j-1] \\times \\frac{1}{i+1}$ 這樣DP的轉移方程就出來了，進行k次DP後得到各個結果的概率，求一下期望,現在就求出了單個 $f_k\\left ( p^a \\right )$ 的值，逐個對所有素因子都求一遍，結果乘起來就是結果了。  </p>\n<p>  到此此題就做完了，以下是AC代碼:  </p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll mod=<span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\">ll factor[<span class=\"number\">200</span>],findex[<span class=\"number\">200</span>];<span class=\"comment\">//factor[i]、findex[i]爲第ｉ個素因子和其次數</span></span><br><span class=\"line\">ll dp[<span class=\"number\">100</span>][<span class=\"number\">10005</span>],inv[<span class=\"number\">1000</span>];<span class=\"comment\">//dp[i][j]爲進行了j次後指數爲i的概率</span></span><br><span class=\"line\">ll n,k,cnt;<span class=\"comment\">//cnt爲素因子個數</span></span><br><span class=\"line\">ll ans;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getinv</span><span class=\"params\">()</span> <span class=\"comment\">//預處理逆元</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tinv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;<span class=\"number\">1000</span>;i++)</span><br><span class=\"line\">\t\tinv[i]=(mod-mod/i)*inv[mod%i]%mod;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">DP</span><span class=\"params\">(<span class=\"keyword\">int</span> now)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dp,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">\tdp[findex[now]][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;<span class=\"comment\">//一次都沒走，只有一種可能,指數爲findex[now]</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;++i)<span class=\"comment\">//要進行k次</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=findex[now];++j)<span class=\"comment\">//(i-1)次時指數爲j</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dp[j][i<span class=\"number\">-1</span>])<span class=\"comment\">//如果(i-1)次時指數爲j有概率的話</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>;l&lt;=j;++l)<span class=\"comment\">//它可以轉移到第i次時指數&lt;=j的狀態</span></span><br><span class=\"line\">\t\t\t\t\tdp[l][i]=( dp[l][i] + (dp[j][i<span class=\"number\">-1</span>]*inv[j+<span class=\"number\">1</span>]%mod) )%mod;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tll t=<span class=\"number\">1</span>,ret=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=findex[now];++i)<span class=\"comment\">//用概率求期望</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tret=(ret+t*dp[i][k])%mod;</span><br><span class=\"line\">\t\tt=t*factor[now]%mod;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tgetinv();</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"built_in\">sqrt</span>(n);++i)<span class=\"comment\">//先篩出素因子</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tfactor[++cnt]=i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(n%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tn/=i;</span><br><span class=\"line\">\t\t\t\t++findex[cnt];<span class=\"comment\">//記錄每個素因子的次數</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tfactor[++cnt]=n;</span><br><span class=\"line\">\t\tfindex[cnt]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tans=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=cnt;++i)<span class=\"comment\">//每個素因子分別DP</span></span><br><span class=\"line\">\t\tans=ans*DP(i)%mod;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>通過本題，零基礎開始對數學有了一點點了解：</p>\n<blockquote>\n<p>積性函數的性質  </p>\n<ul>\n<li>$f(1)==1$  </li>\n<li>$f(c)=f(a)\\times f(b)$………$a,b$互質時(若不互質時為完全積性函數)</li>\n</ul>\n</blockquote>\n<p>以此可以優化一些數學題，類似情形複雜度優化不下來是時可往這個方向思考。</p>"},{"title":"Codeforces Round 541 (Div. 2)","date":"2019-02-24T12:07:45.000Z","mathjax":true,"_content":"## 簡要\n　**C是簡單思維，D是有向圖最長路，E是思維遞推字符串，F是并查集加鏈錶**\n  <!--more-->\n# C. Birthday\n## 題意\n　　給出一個數組，把所有數排成一圈，求如何排使得相鄰的數字的差的最大值最小，也就是波動最小\n  >　[題目入口](http://codeforces.com/contest/1131/problem/C)\n\n## 題解\n說是思維，其實是亂來，只要把數組排序然後，把奇數編號的數順序輸出，接著再把偶數編號的數倒數輸出，AC\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6+8;\nint a[N],f[N];\nint n;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<=n;i+=2)\n\t{\n\t\tcout<<a[i]<<\" \";\n\t\tf[i]=1;\n\t}\n\tfor(int i=n;i>0;--i)\n\t{\n\t\tif(!f[i])\n\t\t\tcout<<a[i]<<\" \";\n\t}\n\treturn 0;\n}\n\n```\n\n## 後記\n開拓思維\n\n# D. Gourmet choice\n## 題意\n　　有兩個集合，給出任意的各自來自不同集合的兩個元素的大小比較關係，要求給每個元素賦值，如果能滿足，輸出使得元素之間滿足給出的關係，並且使得賦的最大的值最小\n  >　[題目入口](http://codeforces.com/contest/1131/problem/D)\n\n## 題解\n其實是個圖論題，把相等的元素用并查集縮點，然後進行拓撲排序，如果有環，則無法滿足這關係，如果沒有環，把元素最小的距離設為1，把每條邊的距離當做1，求所有元素的最長路徑距離，得到的距離就是答案\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2000+8;\nchar c[N][N];\nint n,m,cnt;\nint f[N],ran[N],in[N],dis[N],ans[N],head[N];\nvector<int> L;\nqueue<int> q;\nstruct E\n{\n\tint v,next;\n}e[N*N];\n\nint add(int u,int v)\n{\n\tin[v]++;\n\te[cnt].v=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt++;\n}\n\nint fi(int a)\n{\n\treturn a==f[a]?a:f[a]=fi(f[a]);\n}\nvoid unite(int a,int b)\n{\n\tint x=fi(a),y=fi(b);\n\tif(x==y)\n\t\treturn ;\n\tif(ran[x]>ran[y])\n\t\tf[y]=x;\n\telse\n\t{\n\t\tif(ran[x]==ran[y])\n\t\t\tran[y]++;\n\t\tf[x]=y;\n\t}\n}\nbool topo()\t\t//拓撲排序\n{\n\tfor(int i=1;i<=n+m;++i)\n\t\tif(fi(i)==i&&!in[fi(i)])\n\t\t{\n\t\t\tq.push(fi(i));\n\t\t\tdis[fi(i)]=1;\n\t\t}\n\tif(q.empty())\n\t\treturn 0;\n\twhile(!q.empty())\n\t{\n\t\tint t=q.front();q.pop();\n\t\tL.push_back(t);\n\t\tfor(int i=head[t];~i;i=e[i].next)\n\t\t{\n\t\t\tin[e[i].v]--;\n\t\t\tif(!in[e[i].v])\n\t\t\t\tq.push(e[i].v);\n\t\t}\n\t}\n\tfor(int i=1;i<=n+m;++i)\n\t\tif(fi(i)==i&&in[i])\n\t\t\treturn 0;\n\tfor(int i=0;i<L.size();++i)\t//按照拓撲序遞推出各個元素的最長距離\n\t{\n\t\tint t=fi(L[i]);\n\t\tfor(int j=head[t];~j;j=e[j].next)\n\t\t\tdis[e[j].v]=max(dis[e[j].v],dis[t]+1);\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n+m;++i)\n\t{\n\t\thead[i]=-1;\n\t\tf[i]=i;\n\t\tran[i]=0;\n\t\tdis[i]=-0x3f3f3f3f;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%s\",c[i]+1);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tif(c[i][j]=='=')\n\t\t\t\tunite(i,n+j);\t\t//并查集縮點\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tif(c[i][j]=='<')\t//邊從小的指向大的，使得大的距離遠，滿足編號大\n\t\t\t\tadd(fi(i),fi(j+n));\n\t\t\tif(c[i][j]=='>')\n\t\t\t\tadd(fi(j+n),fi(i));\n\t\t}\n\tif(!topo())\n\t{\n\t\tcout<<\"No\"<<endl;\n\t\treturn 0;\n\t}\n\tcout<<\"Yes\"<<endl;\n\tfor(int i=1;i<=n+m;++i)\t\t//把縮在一起的點的距離填回去\n\t\tdis[i]=dis[fi(i)];\n\tfor(int i=1;i<=n;++i)\n\t\tprintf(\"%d \",dis[i]);\n\tputs(\"\");\n\tfor(int i=n+1;i<=n+m;++i)\n\t\tprintf(\"%d \",dis[i]);\n\tputs(\"\");\n\treturn 0;\n}\n\n```\n\n## 後記\n有向無環圖最長路徑典型方法\n\n# E. Arithmetic Progression\n## 題意\n給出了兩個字符串的乘法的定義，求出所有字符串按順序相乘之後的最長連續相同字符段的長度。\n  >　[題目入口](http://codeforces.com/contest/1131/problem/E)\n\n## 題解\n觀察可得這個乘法具有結合律，也就是說順序并不影響結果，那麼可以從後面往前面乘，那樣容易計算乘之後的狀態轉移，從最後一個字符串開始往前遞推\n容易知道最左邊和右邊的字符串永遠是排在最後面的那個字符串，我們只需要維護幾個數據：  \n* $ll$ : 當前最左邊連續相同字符的長度\n* $lr$ : 當前最右邊連續相同字符的長度\n* $m$ : 當前內部最長連續相同字符的長度\n* $f$ : 當前狀態是不是全由同一個字符組成，$f=1$ 表示是\n考慮以下的情況下的狀態轉移\n\n1. 當前是由同一個字符構成的，即 $f=1$ ，乘另一個字符串時，就看找出那個字符的最長連續相同字符段長度 $nm$\n   * 如果這個字符也是由同一個字符構成，且與當前串的那個字符相同時，那乘過去還是都由這個字符構成，且 $m=(nm+1)\\times m+nm,ll=lr=m$ \n   * 如果這個字符不是有同一個字符構成，那麼找出裡面當前的那個字符的最大連續長度，把當前的字符串插到那一段里，得到 $m=(nm+1)\\times m+nm$，如果這個字符串的最左邊或最右邊的字符也跟當前的字符相同，且左邊的連續長度為 $nl$ ，右邊的為 $nr$ ，那麼可以擴張 $ll$ 和 $lr$ ，$ll=(nl+1)\\times m+nl，lr=(nr+1)\\times m+nr;$\n2. 如果當前由多個字符構成，即 $f=0$ ，乘另一個字符串，有以下的情況\n   * 如果 $l==r$ 那麼可以找出字符串中與這個字符相同的地方，把兩個當前串插入它兩邊，得到一段長度為 $ll+rr+1$ 的連續相同字符段\n   * 如果 $l!=r$ 只有可能字符串中出現了 $l$($r$) 時，可組成 $ll+1$($lr+1$) 長度的連續相同字符段\n   * 只要把 $m$ 一直取最大值就可以了，因為這是 $ll$ 和 $lr$ 并不能擴張，因為當前的串內部已經中斷了，而乘了之後兩邊一定是當前串\n\n這道題的討論有點繁多，這就是難點，當然還有觀察出滿足結合律\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 100000+8;\nint n;\nstring s[N];\nint cl(string &str)\t//最左邊的連續相同字符的長度\n{\n\tint ret=1;\n\tfor(int i=1;i<str.length();++i)\n\t{\n\t\tif(str[i]==str[0])\n\t\t\tret++;\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn ret;\n}\nint cr(string &str)\t//最右邊的連續相同字符的長度\n{\n\tint ret=1;\n\tfor(int i=str.length()-2;i>=0;--i)\n\t{\n\t\tif(str[i]==str[str.length()-1])\n\t\t\tret++;\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn ret;\n}\n\nint cf(string &str,char c)\t//求字符串中字符c的最大連續長度\n{\n\tint ret=0,cnt=0;\n\tfor(int i=0;i<str.length();++i)\n\t{\n\t\tif(c==str[i])\n\t\t\tcnt++;\n\t\telse\n\t\t\tcnt=0;\n\t\tret=max(ret,cnt);\n\t}\n\treturn ret;\n}\n\nint cc(string &str)\t//求字符串中最大連續同字符長度\n{\n\tchar c=0;\n\tint ret=0,cnt=1;\n\tfor(int i=0;i<str.length();++i)\n\t{\n\t\tif(c==str[i])\n\t\t\tcnt++;\n\t\telse\n\t\t\tcnt=1;\n\t\tret=max(ret,cnt);\n\t\tc=str[i];\n\t}\n\treturn ret;\n}\nint main()\n{\n\tchar l,r;\t//l是最后一個字符串的最左邊的字符，r是最右邊的字符,無論怎麼乘都不會改變\n\tint ll=1,lr=1,m=0;\n\tbool f=0;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>s[i];\n\tl=s[n][0];\t\t\t\t//先求出當前的狀態\n\tr=s[n][s[n].length()-1];\n\tll=cl(s[n]);\n\tlr=cr(s[n]);\n\tm=cc(s[n]);\n\tif(ll==s[n].length())\n\t\tf=1;\n\tfor(int i=n-1;i>0;--i)\n\t{\n\t\tif(f)\t//當前由同一個字符構成\n\t\t{\n\t\t\tint nm=cf(s[i],l);\n\t\t\tif(nm==s[i].length())\t//如果乘的字符也全由這個字符構成\n\t\t\t{\n\t\t\t\tm=m*(nm+1)+nm;\n\t\t\t\tll=lr=m;\n\t\t\t}\n\t\t\telse\t//乘的字符由多種字符構成\n\t\t\t{\n\t\t\t\tf=0;\n\t\t\t\tint nl=cl(s[i]),nr=cr(s[i]);\n\t\t\t\tif(s[i][0]==l)\n\t\t\t\t\tll=(nl+1)*m+nl;\n\t\t\t\tif(s[i][s[i].length()-1]==r)\n\t\t\t\t\tlr=(nr+1)*m+nr;\n\t\t\t\tm=m*(nm+1)+nm;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(l==r)\t//如果可以把左右兩端的連續段連起來\n\t\t\t{\n\t\t\t\tfor(int j=0;j<s[i].length();++j)\n\t\t\t\t{\n\t\t\t\t\tif(s[i][j]==l)\n\t\t\t\t\t\tm=max(ll+lr+1,m);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int j=0;j<s[i].length();++j)\n\t\t\t\t{\n\t\t\t\t\tif(s[i][j]==l)\n\t\t\t\t\t\tm=max(m,ll+1);\n\t\t\t\t\tif(s[i][j]==r)\n\t\t\t\t\t\tm=max(m,lr+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<m<<endl;\n\treturn 0;\n}\n\n```\n\n## 後記\n多種情況的討論，需要耐心分析\n\n\n# F. Asya And Kittens\n## 題意\n知道有一排數字，每個數字間一個隔板，隨後不斷給出兩個數的相鄰關係，給出關係后，它們之間的隔板就消失，成為同一個格子里的數，按照給出的相鄰關係，還原最開始的數字序列\n  >　[題目入口](http://codeforces.com/contest/1131/problem/F)\n\n## 題解\n只需要用并查集維護元素位置的合併，然後用鏈錶模擬相鄰元素的拼接，最後輸出鏈錶即可\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=150000+8;\nint f[N],ran[N],n;\nstruct D\n{\n\tint l,r,next;//l和r是這個塊的最左邊的最右邊的元素，next是尾指針\n}a[N];\nint fi(int x)\n{\n\treturn x==f[x]?x:f[x]=fi(f[x]);\n}\nvoid unite(int aa,int bb)\n{\n\tint x=fi(aa),y=fi(bb);\n\tif(x==y)\n\t\treturn ;\n\tif(ran[x]>ran[y])\t//把y接到x上\n\t{\n\t\tf[y]=x;\t\n\t\ta[a[y].r].next=a[x].l;\t//y的最右邊的尾指針指向x的最左邊\n\t\ta[x].l=a[y].l;\t\t\t//x的最左邊變成y的最左邊那個\n\t}\n\telse\t\t\t\t\t//把x接到y上，同理\n\t{\n\t\tif(ran[x]==ran[x])\n\t\t\tran[y]++;\n\t\tf[x]=y;\n\t\ta[a[x].r].next=a[y].l;\n\t\ta[y].l=a[x].l;\n\t}\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tf[i]=i;\n\t\tran[i]=0;\n\t\ta[i].l=a[i].r=i;\n\t\ta[i].next=-1;\n\t}\n\tint x,y;\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tcin>>x>>y;\n\t\tunite(x,y);\n\t}\n\tfor(int i=1;i<=n;++i)//找出鏈錶最左邊那個元素\n\t\tif(fi(i)==i)\n\t\t\tx=a[i].l;\t\t\n\twhile(x!=-1)//輸出整條鏈錶\n\t{\n\t\tcout<<x<<\" \";\n\t\tx=a[x].next;\n\t}\n\treturn 0;\n}\n\n```\n## 後記\n注意鏈錶\n","source":"_posts/Codeforces Round 541 (Div. 2).md","raw":"---\ntitle: Codeforces Round 541 (Div. 2)\ndate: 2019-02-24 20:07:45\nmathjax: true\ntags: [圖論,DP,字符串]\ncategories:\n- ACM\n---\n## 簡要\n　**C是簡單思維，D是有向圖最長路，E是思維遞推字符串，F是并查集加鏈錶**\n  <!--more-->\n# C. Birthday\n## 題意\n　　給出一個數組，把所有數排成一圈，求如何排使得相鄰的數字的差的最大值最小，也就是波動最小\n  >　[題目入口](http://codeforces.com/contest/1131/problem/C)\n\n## 題解\n說是思維，其實是亂來，只要把數組排序然後，把奇數編號的數順序輸出，接著再把偶數編號的數倒數輸出，AC\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6+8;\nint a[N],f[N];\nint n;\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>a[i];\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<=n;i+=2)\n\t{\n\t\tcout<<a[i]<<\" \";\n\t\tf[i]=1;\n\t}\n\tfor(int i=n;i>0;--i)\n\t{\n\t\tif(!f[i])\n\t\t\tcout<<a[i]<<\" \";\n\t}\n\treturn 0;\n}\n\n```\n\n## 後記\n開拓思維\n\n# D. Gourmet choice\n## 題意\n　　有兩個集合，給出任意的各自來自不同集合的兩個元素的大小比較關係，要求給每個元素賦值，如果能滿足，輸出使得元素之間滿足給出的關係，並且使得賦的最大的值最小\n  >　[題目入口](http://codeforces.com/contest/1131/problem/D)\n\n## 題解\n其實是個圖論題，把相等的元素用并查集縮點，然後進行拓撲排序，如果有環，則無法滿足這關係，如果沒有環，把元素最小的距離設為1，把每條邊的距離當做1，求所有元素的最長路徑距離，得到的距離就是答案\n\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2000+8;\nchar c[N][N];\nint n,m,cnt;\nint f[N],ran[N],in[N],dis[N],ans[N],head[N];\nvector<int> L;\nqueue<int> q;\nstruct E\n{\n\tint v,next;\n}e[N*N];\n\nint add(int u,int v)\n{\n\tin[v]++;\n\te[cnt].v=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt++;\n}\n\nint fi(int a)\n{\n\treturn a==f[a]?a:f[a]=fi(f[a]);\n}\nvoid unite(int a,int b)\n{\n\tint x=fi(a),y=fi(b);\n\tif(x==y)\n\t\treturn ;\n\tif(ran[x]>ran[y])\n\t\tf[y]=x;\n\telse\n\t{\n\t\tif(ran[x]==ran[y])\n\t\t\tran[y]++;\n\t\tf[x]=y;\n\t}\n}\nbool topo()\t\t//拓撲排序\n{\n\tfor(int i=1;i<=n+m;++i)\n\t\tif(fi(i)==i&&!in[fi(i)])\n\t\t{\n\t\t\tq.push(fi(i));\n\t\t\tdis[fi(i)]=1;\n\t\t}\n\tif(q.empty())\n\t\treturn 0;\n\twhile(!q.empty())\n\t{\n\t\tint t=q.front();q.pop();\n\t\tL.push_back(t);\n\t\tfor(int i=head[t];~i;i=e[i].next)\n\t\t{\n\t\t\tin[e[i].v]--;\n\t\t\tif(!in[e[i].v])\n\t\t\t\tq.push(e[i].v);\n\t\t}\n\t}\n\tfor(int i=1;i<=n+m;++i)\n\t\tif(fi(i)==i&&in[i])\n\t\t\treturn 0;\n\tfor(int i=0;i<L.size();++i)\t//按照拓撲序遞推出各個元素的最長距離\n\t{\n\t\tint t=fi(L[i]);\n\t\tfor(int j=head[t];~j;j=e[j].next)\n\t\t\tdis[e[j].v]=max(dis[e[j].v],dis[t]+1);\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n+m;++i)\n\t{\n\t\thead[i]=-1;\n\t\tf[i]=i;\n\t\tran[i]=0;\n\t\tdis[i]=-0x3f3f3f3f;\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%s\",c[i]+1);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t\tif(c[i][j]=='=')\n\t\t\t\tunite(i,n+j);\t\t//并查集縮點\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tif(c[i][j]=='<')\t//邊從小的指向大的，使得大的距離遠，滿足編號大\n\t\t\t\tadd(fi(i),fi(j+n));\n\t\t\tif(c[i][j]=='>')\n\t\t\t\tadd(fi(j+n),fi(i));\n\t\t}\n\tif(!topo())\n\t{\n\t\tcout<<\"No\"<<endl;\n\t\treturn 0;\n\t}\n\tcout<<\"Yes\"<<endl;\n\tfor(int i=1;i<=n+m;++i)\t\t//把縮在一起的點的距離填回去\n\t\tdis[i]=dis[fi(i)];\n\tfor(int i=1;i<=n;++i)\n\t\tprintf(\"%d \",dis[i]);\n\tputs(\"\");\n\tfor(int i=n+1;i<=n+m;++i)\n\t\tprintf(\"%d \",dis[i]);\n\tputs(\"\");\n\treturn 0;\n}\n\n```\n\n## 後記\n有向無環圖最長路徑典型方法\n\n# E. Arithmetic Progression\n## 題意\n給出了兩個字符串的乘法的定義，求出所有字符串按順序相乘之後的最長連續相同字符段的長度。\n  >　[題目入口](http://codeforces.com/contest/1131/problem/E)\n\n## 題解\n觀察可得這個乘法具有結合律，也就是說順序并不影響結果，那麼可以從後面往前面乘，那樣容易計算乘之後的狀態轉移，從最後一個字符串開始往前遞推\n容易知道最左邊和右邊的字符串永遠是排在最後面的那個字符串，我們只需要維護幾個數據：  \n* $ll$ : 當前最左邊連續相同字符的長度\n* $lr$ : 當前最右邊連續相同字符的長度\n* $m$ : 當前內部最長連續相同字符的長度\n* $f$ : 當前狀態是不是全由同一個字符組成，$f=1$ 表示是\n考慮以下的情況下的狀態轉移\n\n1. 當前是由同一個字符構成的，即 $f=1$ ，乘另一個字符串時，就看找出那個字符的最長連續相同字符段長度 $nm$\n   * 如果這個字符也是由同一個字符構成，且與當前串的那個字符相同時，那乘過去還是都由這個字符構成，且 $m=(nm+1)\\times m+nm,ll=lr=m$ \n   * 如果這個字符不是有同一個字符構成，那麼找出裡面當前的那個字符的最大連續長度，把當前的字符串插到那一段里，得到 $m=(nm+1)\\times m+nm$，如果這個字符串的最左邊或最右邊的字符也跟當前的字符相同，且左邊的連續長度為 $nl$ ，右邊的為 $nr$ ，那麼可以擴張 $ll$ 和 $lr$ ，$ll=(nl+1)\\times m+nl，lr=(nr+1)\\times m+nr;$\n2. 如果當前由多個字符構成，即 $f=0$ ，乘另一個字符串，有以下的情況\n   * 如果 $l==r$ 那麼可以找出字符串中與這個字符相同的地方，把兩個當前串插入它兩邊，得到一段長度為 $ll+rr+1$ 的連續相同字符段\n   * 如果 $l!=r$ 只有可能字符串中出現了 $l$($r$) 時，可組成 $ll+1$($lr+1$) 長度的連續相同字符段\n   * 只要把 $m$ 一直取最大值就可以了，因為這是 $ll$ 和 $lr$ 并不能擴張，因為當前的串內部已經中斷了，而乘了之後兩邊一定是當前串\n\n這道題的討論有點繁多，這就是難點，當然還有觀察出滿足結合律\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 100000+8;\nint n;\nstring s[N];\nint cl(string &str)\t//最左邊的連續相同字符的長度\n{\n\tint ret=1;\n\tfor(int i=1;i<str.length();++i)\n\t{\n\t\tif(str[i]==str[0])\n\t\t\tret++;\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn ret;\n}\nint cr(string &str)\t//最右邊的連續相同字符的長度\n{\n\tint ret=1;\n\tfor(int i=str.length()-2;i>=0;--i)\n\t{\n\t\tif(str[i]==str[str.length()-1])\n\t\t\tret++;\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn ret;\n}\n\nint cf(string &str,char c)\t//求字符串中字符c的最大連續長度\n{\n\tint ret=0,cnt=0;\n\tfor(int i=0;i<str.length();++i)\n\t{\n\t\tif(c==str[i])\n\t\t\tcnt++;\n\t\telse\n\t\t\tcnt=0;\n\t\tret=max(ret,cnt);\n\t}\n\treturn ret;\n}\n\nint cc(string &str)\t//求字符串中最大連續同字符長度\n{\n\tchar c=0;\n\tint ret=0,cnt=1;\n\tfor(int i=0;i<str.length();++i)\n\t{\n\t\tif(c==str[i])\n\t\t\tcnt++;\n\t\telse\n\t\t\tcnt=1;\n\t\tret=max(ret,cnt);\n\t\tc=str[i];\n\t}\n\treturn ret;\n}\nint main()\n{\n\tchar l,r;\t//l是最后一個字符串的最左邊的字符，r是最右邊的字符,無論怎麼乘都不會改變\n\tint ll=1,lr=1,m=0;\n\tbool f=0;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>s[i];\n\tl=s[n][0];\t\t\t\t//先求出當前的狀態\n\tr=s[n][s[n].length()-1];\n\tll=cl(s[n]);\n\tlr=cr(s[n]);\n\tm=cc(s[n]);\n\tif(ll==s[n].length())\n\t\tf=1;\n\tfor(int i=n-1;i>0;--i)\n\t{\n\t\tif(f)\t//當前由同一個字符構成\n\t\t{\n\t\t\tint nm=cf(s[i],l);\n\t\t\tif(nm==s[i].length())\t//如果乘的字符也全由這個字符構成\n\t\t\t{\n\t\t\t\tm=m*(nm+1)+nm;\n\t\t\t\tll=lr=m;\n\t\t\t}\n\t\t\telse\t//乘的字符由多種字符構成\n\t\t\t{\n\t\t\t\tf=0;\n\t\t\t\tint nl=cl(s[i]),nr=cr(s[i]);\n\t\t\t\tif(s[i][0]==l)\n\t\t\t\t\tll=(nl+1)*m+nl;\n\t\t\t\tif(s[i][s[i].length()-1]==r)\n\t\t\t\t\tlr=(nr+1)*m+nr;\n\t\t\t\tm=m*(nm+1)+nm;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(l==r)\t//如果可以把左右兩端的連續段連起來\n\t\t\t{\n\t\t\t\tfor(int j=0;j<s[i].length();++j)\n\t\t\t\t{\n\t\t\t\t\tif(s[i][j]==l)\n\t\t\t\t\t\tm=max(ll+lr+1,m);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int j=0;j<s[i].length();++j)\n\t\t\t\t{\n\t\t\t\t\tif(s[i][j]==l)\n\t\t\t\t\t\tm=max(m,ll+1);\n\t\t\t\t\tif(s[i][j]==r)\n\t\t\t\t\t\tm=max(m,lr+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<m<<endl;\n\treturn 0;\n}\n\n```\n\n## 後記\n多種情況的討論，需要耐心分析\n\n\n# F. Asya And Kittens\n## 題意\n知道有一排數字，每個數字間一個隔板，隨後不斷給出兩個數的相鄰關係，給出關係后，它們之間的隔板就消失，成為同一個格子里的數，按照給出的相鄰關係，還原最開始的數字序列\n  >　[題目入口](http://codeforces.com/contest/1131/problem/F)\n\n## 題解\n只需要用并查集維護元素位置的合併，然後用鏈錶模擬相鄰元素的拼接，最後輸出鏈錶即可\n## AC CODE\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=150000+8;\nint f[N],ran[N],n;\nstruct D\n{\n\tint l,r,next;//l和r是這個塊的最左邊的最右邊的元素，next是尾指針\n}a[N];\nint fi(int x)\n{\n\treturn x==f[x]?x:f[x]=fi(f[x]);\n}\nvoid unite(int aa,int bb)\n{\n\tint x=fi(aa),y=fi(bb);\n\tif(x==y)\n\t\treturn ;\n\tif(ran[x]>ran[y])\t//把y接到x上\n\t{\n\t\tf[y]=x;\t\n\t\ta[a[y].r].next=a[x].l;\t//y的最右邊的尾指針指向x的最左邊\n\t\ta[x].l=a[y].l;\t\t\t//x的最左邊變成y的最左邊那個\n\t}\n\telse\t\t\t\t\t//把x接到y上，同理\n\t{\n\t\tif(ran[x]==ran[x])\n\t\t\tran[y]++;\n\t\tf[x]=y;\n\t\ta[a[x].r].next=a[y].l;\n\t\ta[y].l=a[x].l;\n\t}\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tf[i]=i;\n\t\tran[i]=0;\n\t\ta[i].l=a[i].r=i;\n\t\ta[i].next=-1;\n\t}\n\tint x,y;\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tcin>>x>>y;\n\t\tunite(x,y);\n\t}\n\tfor(int i=1;i<=n;++i)//找出鏈錶最左邊那個元素\n\t\tif(fi(i)==i)\n\t\t\tx=a[i].l;\t\t\n\twhile(x!=-1)//輸出整條鏈錶\n\t{\n\t\tcout<<x<<\" \";\n\t\tx=a[x].next;\n\t}\n\treturn 0;\n}\n\n```\n## 後記\n注意鏈錶\n","slug":"Codeforces Round 541 (Div. 2)","published":1,"updated":"2019-04-07T09:11:30.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjugu20hg000n7di12bpguj0i","content":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>C是簡單思維，D是有向圖最長路，E是思維遞推字符串，F是并查集加鏈錶</strong><br>  <a id=\"more\"></a></p>\n<h1 id=\"C-Birthday\"><a href=\"#C-Birthday\" class=\"headerlink\" title=\"C. Birthday\"></a>C. Birthday</h1><h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出一個數組，把所有數排成一圈，求如何排使得相鄰的數字的差的最大值最小，也就是波動最小</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/C\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>說是思維，其實是亂來，只要把數組排序然後，把奇數編號的數順序輸出，接著再把偶數編號的數倒數輸出，AC</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1e6</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[N],f[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a+<span class=\"number\">1</span>,a+<span class=\"number\">1</span>+n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i+=<span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\tf[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&gt;<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!f[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>開拓思維</p>\n<h1 id=\"D-Gourmet-choice\"><a href=\"#D-Gourmet-choice\" class=\"headerlink\" title=\"D. Gourmet choice\"></a>D. Gourmet choice</h1><h2 id=\"題意-1\"><a href=\"#題意-1\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　有兩個集合，給出任意的各自來自不同集合的兩個元素的大小比較關係，要求給每個元素賦值，如果能滿足，輸出使得元素之間滿足給出的關係，並且使得賦的最大的值最小</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-1\"><a href=\"#題解-1\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>其實是個圖論題，把相等的元素用并查集縮點，然後進行拓撲排序，如果有環，則無法滿足這關係，如果沒有環，把元素最小的距離設為1，把每條邊的距離當做1，求所有元素的最長路徑距離，得到的距離就是答案</p>\n<h2 id=\"AC-CODE-1\"><a href=\"#AC-CODE-1\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">2000</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> c[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,cnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N],ran[N],in[N],dis[N],ans[N],head[N];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; L;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">E</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,next;</span><br><span class=\"line\">&#125;e[N*N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tin[v]++;</span><br><span class=\"line\">\te[cnt].v=v;</span><br><span class=\"line\">\te[cnt].next=head[u];</span><br><span class=\"line\">\thead[u]=cnt++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fi</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a==f[a]?a:f[a]=fi(f[a]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unite</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=fi(a),y=fi(b);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==y)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ran[x]&gt;ran[y])</span><br><span class=\"line\">\t\tf[y]=x;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ran[x]==ran[y])</span><br><span class=\"line\">\t\t\tran[y]++;</span><br><span class=\"line\">\t\tf[x]=y;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">topo</span><span class=\"params\">()</span>\t\t<span class=\"comment\">//拓撲排序</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fi(i)==i&amp;&amp;!in[fi(i)])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tq.push(fi(i));</span><br><span class=\"line\">\t\t\tdis[fi(i)]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(q.empty())</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=q.front();q.pop();</span><br><span class=\"line\">\t\tL.push_back(t);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[t];~i;i=e[i].next)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tin[e[i].v]--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!in[e[i].v])</span><br><span class=\"line\">\t\t\t\tq.push(e[i].v);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fi(i)==i&amp;&amp;in[i])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;L.size();++i)\t<span class=\"comment\">//按照拓撲序遞推出各個元素的最長距離</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=fi(L[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=head[t];~j;j=e[j].next)</span><br><span class=\"line\">\t\t\tdis[e[j].v]=max(dis[e[j].v],dis[t]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\thead[i]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tf[i]=i;</span><br><span class=\"line\">\t\tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tdis[i]=<span class=\"number\">-0x3f3f3f3f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,c[i]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;++j)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c[i][j]==<span class=\"string\">'='</span>)</span><br><span class=\"line\">\t\t\t\tunite(i,n+j);\t\t<span class=\"comment\">//并查集縮點</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;++j)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c[i][j]==<span class=\"string\">'&lt;'</span>)\t<span class=\"comment\">//邊從小的指向大的，使得大的距離遠，滿足編號大</span></span><br><span class=\"line\">\t\t\t\tadd(fi(i),fi(j+n));</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c[i][j]==<span class=\"string\">'&gt;'</span>)</span><br><span class=\"line\">\t\t\t\tadd(fi(j+n),fi(i));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!topo())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)\t\t<span class=\"comment\">//把縮在一起的點的距離填回去</span></span><br><span class=\"line\">\t\tdis[i]=dis[fi(i)];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,dis[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n+<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,dis[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-1\"><a href=\"#後記-1\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>有向無環圖最長路徑典型方法</p>\n<h1 id=\"E-Arithmetic-Progression\"><a href=\"#E-Arithmetic-Progression\" class=\"headerlink\" title=\"E. Arithmetic Progression\"></a>E. Arithmetic Progression</h1><h2 id=\"題意-2\"><a href=\"#題意-2\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>給出了兩個字符串的乘法的定義，求出所有字符串按順序相乘之後的最長連續相同字符段的長度。</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/E\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-2\"><a href=\"#題解-2\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>觀察可得這個乘法具有結合律，也就是說順序并不影響結果，那麼可以從後面往前面乘，那樣容易計算乘之後的狀態轉移，從最後一個字符串開始往前遞推<br>容易知道最左邊和右邊的字符串永遠是排在最後面的那個字符串，我們只需要維護幾個數據：  </p>\n<ul>\n<li>$ll$ : 當前最左邊連續相同字符的長度</li>\n<li>$lr$ : 當前最右邊連續相同字符的長度</li>\n<li>$m$ : 當前內部最長連續相同字符的長度</li>\n<li>$f$ : 當前狀態是不是全由同一個字符組成，$f=1$ 表示是<br>考慮以下的情況下的狀態轉移</li>\n</ul>\n<ol>\n<li>當前是由同一個字符構成的，即 $f=1$ ，乘另一個字符串時，就看找出那個字符的最長連續相同字符段長度 $nm$<ul>\n<li>如果這個字符也是由同一個字符構成，且與當前串的那個字符相同時，那乘過去還是都由這個字符構成，且 $m=(nm+1)\\times m+nm,ll=lr=m$ </li>\n<li>如果這個字符不是有同一個字符構成，那麼找出裡面當前的那個字符的最大連續長度，把當前的字符串插到那一段里，得到 $m=(nm+1)\\times m+nm$，如果這個字符串的最左邊或最右邊的字符也跟當前的字符相同，且左邊的連續長度為 $nl$ ，右邊的為 $nr$ ，那麼可以擴張 $ll$ 和 $lr$ ，$ll=(nl+1)\\times m+nl，lr=(nr+1)\\times m+nr;$</li>\n</ul>\n</li>\n<li>如果當前由多個字符構成，即 $f=0$ ，乘另一個字符串，有以下的情況<ul>\n<li>如果 $l==r$ 那麼可以找出字符串中與這個字符相同的地方，把兩個當前串插入它兩邊，得到一段長度為 $ll+rr+1$ 的連續相同字符段</li>\n<li>如果 $l!=r$ 只有可能字符串中出現了 $l$($r$) 時，可組成 $ll+1$($lr+1$) 長度的連續相同字符段</li>\n<li>只要把 $m$ 一直取最大值就可以了，因為這是 $ll$ 和 $lr$ 并不能擴張，因為當前的串內部已經中斷了，而乘了之後兩邊一定是當前串</li>\n</ul>\n</li>\n</ol>\n<p>這道題的討論有點繁多，這就是難點，當然還有觀察出滿足結合律</p>\n<h2 id=\"AC-CODE-2\"><a href=\"#AC-CODE-2\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100000</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">string</span> s[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cl</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str)</span>\t<span class=\"comment\">//最左邊的連續相同字符的長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;str.length();++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(str[i]==str[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\tret++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cr</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str)</span>\t<span class=\"comment\">//最右邊的連續相同字符的長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=str.length()<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(str[i]==str[str.length()<span class=\"number\">-1</span>])</span><br><span class=\"line\">\t\t\tret++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cf</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str,<span class=\"keyword\">char</span> c)</span>\t<span class=\"comment\">//求字符串中字符c的最大連續長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">0</span>,cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;str.length();++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c==str[i])</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tret=max(ret,cnt);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cc</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str)</span>\t<span class=\"comment\">//求字符串中最大連續同字符長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> c=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">0</span>,cnt=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;str.length();++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c==str[i])</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcnt=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tret=max(ret,cnt);</span><br><span class=\"line\">\t\tc=str[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> l,r;\t<span class=\"comment\">//l是最后一個字符串的最左邊的字符，r是最右邊的字符,無論怎麼乘都不會改變</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ll=<span class=\"number\">1</span>,lr=<span class=\"number\">1</span>,m=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> f=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;s[i];</span><br><span class=\"line\">\tl=s[n][<span class=\"number\">0</span>];\t\t\t\t<span class=\"comment\">//先求出當前的狀態</span></span><br><span class=\"line\">\tr=s[n][s[n].length()<span class=\"number\">-1</span>];</span><br><span class=\"line\">\tll=cl(s[n]);</span><br><span class=\"line\">\tlr=cr(s[n]);</span><br><span class=\"line\">\tm=cc(s[n]);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ll==s[n].length())</span><br><span class=\"line\">\t\tf=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f)\t<span class=\"comment\">//當前由同一個字符構成</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> nm=cf(s[i],l);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(nm==s[i].length())\t<span class=\"comment\">//如果乘的字符也全由這個字符構成</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tm=m*(nm+<span class=\"number\">1</span>)+nm;</span><br><span class=\"line\">\t\t\t\tll=lr=m;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>\t<span class=\"comment\">//乘的字符由多種字符構成</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tf=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> nl=cl(s[i]),nr=cr(s[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(s[i][<span class=\"number\">0</span>]==l)</span><br><span class=\"line\">\t\t\t\t\tll=(nl+<span class=\"number\">1</span>)*m+nl;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(s[i][s[i].length()<span class=\"number\">-1</span>]==r)</span><br><span class=\"line\">\t\t\t\t\tlr=(nr+<span class=\"number\">1</span>)*m+nr;</span><br><span class=\"line\">\t\t\t\tm=m*(nm+<span class=\"number\">1</span>)+nm;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(l==r)\t<span class=\"comment\">//如果可以把左右兩端的連續段連起來</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;s[i].length();++j)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s[i][j]==l)</span><br><span class=\"line\">\t\t\t\t\t\tm=max(ll+lr+<span class=\"number\">1</span>,m);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;s[i].length();++j)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s[i][j]==l)</span><br><span class=\"line\">\t\t\t\t\t\tm=max(m,ll+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s[i][j]==r)</span><br><span class=\"line\">\t\t\t\t\t\tm=max(m,lr+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;m&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-2\"><a href=\"#後記-2\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>多種情況的討論，需要耐心分析</p>\n<h1 id=\"F-Asya-And-Kittens\"><a href=\"#F-Asya-And-Kittens\" class=\"headerlink\" title=\"F. Asya And Kittens\"></a>F. Asya And Kittens</h1><h2 id=\"題意-3\"><a href=\"#題意-3\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>知道有一排數字，每個數字間一個隔板，隨後不斷給出兩個數的相鄰關係，給出關係后，它們之間的隔板就消失，成為同一個格子里的數，按照給出的相鄰關係，還原最開始的數字序列</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/F\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-3\"><a href=\"#題解-3\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>只需要用并查集維護元素位置的合併，然後用鏈錶模擬相鄰元素的拼接，最後輸出鏈錶即可</p>\n<h2 id=\"AC-CODE-3\"><a href=\"#AC-CODE-3\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">150000</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N],ran[N],n;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">D</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l,r,next;<span class=\"comment\">//l和r是這個塊的最左邊的最右邊的元素，next是尾指針</span></span><br><span class=\"line\">&#125;a[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fi</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x==f[x]?x:f[x]=fi(f[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unite</span><span class=\"params\">(<span class=\"keyword\">int</span> aa,<span class=\"keyword\">int</span> bb)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=fi(aa),y=fi(bb);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==y)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ran[x]&gt;ran[y])\t<span class=\"comment\">//把y接到x上</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tf[y]=x;\t</span><br><span class=\"line\">\t\ta[a[y].r].next=a[x].l;\t<span class=\"comment\">//y的最右邊的尾指針指向x的最左邊</span></span><br><span class=\"line\">\t\ta[x].l=a[y].l;\t\t\t<span class=\"comment\">//x的最左邊變成y的最左邊那個</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>\t\t\t\t\t<span class=\"comment\">//把x接到y上，同理</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ran[x]==ran[x])</span><br><span class=\"line\">\t\t\tran[y]++;</span><br><span class=\"line\">\t\tf[x]=y;</span><br><span class=\"line\">\t\ta[a[x].r].next=a[y].l;</span><br><span class=\"line\">\t\ta[y].l=a[x].l;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tf[i]=i;</span><br><span class=\"line\">\t\tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ta[i].l=a[i].r=i;</span><br><span class=\"line\">\t\ta[i].next=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">\t\tunite(x,y);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"comment\">//找出鏈錶最左邊那個元素</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fi(i)==i)</span><br><span class=\"line\">\t\t\tx=a[i].l;\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(x!=<span class=\"number\">-1</span>)<span class=\"comment\">//輸出整條鏈錶</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;x&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\tx=a[x].next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-3\"><a href=\"#後記-3\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>注意鏈錶</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>C是簡單思維，D是有向圖最長路，E是思維遞推字符串，F是并查集加鏈錶</strong><br>","more":"</p>\n<h1 id=\"C-Birthday\"><a href=\"#C-Birthday\" class=\"headerlink\" title=\"C. Birthday\"></a>C. Birthday</h1><h2 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　給出一個數組，把所有數排成一圈，求如何排使得相鄰的數字的差的最大值最小，也就是波動最小</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/C\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>說是思維，其實是亂來，只要把數組排序然後，把奇數編號的數順序輸出，接著再把偶數編號的數倒數輸出，AC</p>\n<h2 id=\"AC-CODE\"><a href=\"#AC-CODE\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1e6</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[N],f[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a+<span class=\"number\">1</span>,a+<span class=\"number\">1</span>+n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i+=<span class=\"number\">2</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\tf[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&gt;<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!f[i])</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;a[i]&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>開拓思維</p>\n<h1 id=\"D-Gourmet-choice\"><a href=\"#D-Gourmet-choice\" class=\"headerlink\" title=\"D. Gourmet choice\"></a>D. Gourmet choice</h1><h2 id=\"題意-1\"><a href=\"#題意-1\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>　　有兩個集合，給出任意的各自來自不同集合的兩個元素的大小比較關係，要求給每個元素賦值，如果能滿足，輸出使得元素之間滿足給出的關係，並且使得賦的最大的值最小</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/D\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-1\"><a href=\"#題解-1\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>其實是個圖論題，把相等的元素用并查集縮點，然後進行拓撲排序，如果有環，則無法滿足這關係，如果沒有環，把元素最小的距離設為1，把每條邊的距離當做1，求所有元素的最長路徑距離，得到的距離就是答案</p>\n<h2 id=\"AC-CODE-1\"><a href=\"#AC-CODE-1\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">2000</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> c[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,cnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N],ran[N],in[N],dis[N],ans[N],head[N];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; L;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; q;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">E</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,next;</span><br><span class=\"line\">&#125;e[N*N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tin[v]++;</span><br><span class=\"line\">\te[cnt].v=v;</span><br><span class=\"line\">\te[cnt].next=head[u];</span><br><span class=\"line\">\thead[u]=cnt++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fi</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a==f[a]?a:f[a]=fi(f[a]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unite</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=fi(a),y=fi(b);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==y)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ran[x]&gt;ran[y])</span><br><span class=\"line\">\t\tf[y]=x;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ran[x]==ran[y])</span><br><span class=\"line\">\t\t\tran[y]++;</span><br><span class=\"line\">\t\tf[x]=y;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">topo</span><span class=\"params\">()</span>\t\t<span class=\"comment\">//拓撲排序</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fi(i)==i&amp;&amp;!in[fi(i)])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tq.push(fi(i));</span><br><span class=\"line\">\t\t\tdis[fi(i)]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(q.empty())</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.empty())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=q.front();q.pop();</span><br><span class=\"line\">\t\tL.push_back(t);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[t];~i;i=e[i].next)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tin[e[i].v]--;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!in[e[i].v])</span><br><span class=\"line\">\t\t\t\tq.push(e[i].v);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fi(i)==i&amp;&amp;in[i])</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;L.size();++i)\t<span class=\"comment\">//按照拓撲序遞推出各個元素的最長距離</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> t=fi(L[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=head[t];~j;j=e[j].next)</span><br><span class=\"line\">\t\t\tdis[e[j].v]=max(dis[e[j].v],dis[t]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\thead[i]=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tf[i]=i;</span><br><span class=\"line\">\t\tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tdis[i]=<span class=\"number\">-0x3f3f3f3f</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,c[i]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;++j)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c[i][j]==<span class=\"string\">'='</span>)</span><br><span class=\"line\">\t\t\t\tunite(i,n+j);\t\t<span class=\"comment\">//并查集縮點</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=m;++j)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c[i][j]==<span class=\"string\">'&lt;'</span>)\t<span class=\"comment\">//邊從小的指向大的，使得大的距離遠，滿足編號大</span></span><br><span class=\"line\">\t\t\t\tadd(fi(i),fi(j+n));</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c[i][j]==<span class=\"string\">'&gt;'</span>)</span><br><span class=\"line\">\t\t\t\tadd(fi(j+n),fi(i));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!topo())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+m;++i)\t\t<span class=\"comment\">//把縮在一起的點的距離填回去</span></span><br><span class=\"line\">\t\tdis[i]=dis[fi(i)];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,dis[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n+<span class=\"number\">1</span>;i&lt;=n+m;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,dis[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-1\"><a href=\"#後記-1\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>有向無環圖最長路徑典型方法</p>\n<h1 id=\"E-Arithmetic-Progression\"><a href=\"#E-Arithmetic-Progression\" class=\"headerlink\" title=\"E. Arithmetic Progression\"></a>E. Arithmetic Progression</h1><h2 id=\"題意-2\"><a href=\"#題意-2\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>給出了兩個字符串的乘法的定義，求出所有字符串按順序相乘之後的最長連續相同字符段的長度。</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/E\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-2\"><a href=\"#題解-2\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>觀察可得這個乘法具有結合律，也就是說順序并不影響結果，那麼可以從後面往前面乘，那樣容易計算乘之後的狀態轉移，從最後一個字符串開始往前遞推<br>容易知道最左邊和右邊的字符串永遠是排在最後面的那個字符串，我們只需要維護幾個數據：  </p>\n<ul>\n<li>$ll$ : 當前最左邊連續相同字符的長度</li>\n<li>$lr$ : 當前最右邊連續相同字符的長度</li>\n<li>$m$ : 當前內部最長連續相同字符的長度</li>\n<li>$f$ : 當前狀態是不是全由同一個字符組成，$f=1$ 表示是<br>考慮以下的情況下的狀態轉移</li>\n</ul>\n<ol>\n<li>當前是由同一個字符構成的，即 $f=1$ ，乘另一個字符串時，就看找出那個字符的最長連續相同字符段長度 $nm$<ul>\n<li>如果這個字符也是由同一個字符構成，且與當前串的那個字符相同時，那乘過去還是都由這個字符構成，且 $m=(nm+1)\\times m+nm,ll=lr=m$ </li>\n<li>如果這個字符不是有同一個字符構成，那麼找出裡面當前的那個字符的最大連續長度，把當前的字符串插到那一段里，得到 $m=(nm+1)\\times m+nm$，如果這個字符串的最左邊或最右邊的字符也跟當前的字符相同，且左邊的連續長度為 $nl$ ，右邊的為 $nr$ ，那麼可以擴張 $ll$ 和 $lr$ ，$ll=(nl+1)\\times m+nl，lr=(nr+1)\\times m+nr;$</li>\n</ul>\n</li>\n<li>如果當前由多個字符構成，即 $f=0$ ，乘另一個字符串，有以下的情況<ul>\n<li>如果 $l==r$ 那麼可以找出字符串中與這個字符相同的地方，把兩個當前串插入它兩邊，得到一段長度為 $ll+rr+1$ 的連續相同字符段</li>\n<li>如果 $l!=r$ 只有可能字符串中出現了 $l$($r$) 時，可組成 $ll+1$($lr+1$) 長度的連續相同字符段</li>\n<li>只要把 $m$ 一直取最大值就可以了，因為這是 $ll$ 和 $lr$ 并不能擴張，因為當前的串內部已經中斷了，而乘了之後兩邊一定是當前串</li>\n</ul>\n</li>\n</ol>\n<p>這道題的討論有點繁多，這就是難點，當然還有觀察出滿足結合律</p>\n<h2 id=\"AC-CODE-2\"><a href=\"#AC-CODE-2\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100000</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"built_in\">string</span> s[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cl</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str)</span>\t<span class=\"comment\">//最左邊的連續相同字符的長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;str.length();++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(str[i]==str[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\tret++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cr</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str)</span>\t<span class=\"comment\">//最右邊的連續相同字符的長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=str.length()<span class=\"number\">-2</span>;i&gt;=<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(str[i]==str[str.length()<span class=\"number\">-1</span>])</span><br><span class=\"line\">\t\t\tret++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cf</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str,<span class=\"keyword\">char</span> c)</span>\t<span class=\"comment\">//求字符串中字符c的最大連續長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">0</span>,cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;str.length();++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c==str[i])</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tret=max(ret,cnt);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cc</span><span class=\"params\">(<span class=\"built_in\">string</span> &amp;str)</span>\t<span class=\"comment\">//求字符串中最大連續同字符長度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> c=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret=<span class=\"number\">0</span>,cnt=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;str.length();++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c==str[i])</span><br><span class=\"line\">\t\t\tcnt++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tcnt=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tret=max(ret,cnt);</span><br><span class=\"line\">\t\tc=str[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> l,r;\t<span class=\"comment\">//l是最后一個字符串的最左邊的字符，r是最右邊的字符,無論怎麼乘都不會改變</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ll=<span class=\"number\">1</span>,lr=<span class=\"number\">1</span>,m=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> f=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;s[i];</span><br><span class=\"line\">\tl=s[n][<span class=\"number\">0</span>];\t\t\t\t<span class=\"comment\">//先求出當前的狀態</span></span><br><span class=\"line\">\tr=s[n][s[n].length()<span class=\"number\">-1</span>];</span><br><span class=\"line\">\tll=cl(s[n]);</span><br><span class=\"line\">\tlr=cr(s[n]);</span><br><span class=\"line\">\tm=cc(s[n]);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ll==s[n].length())</span><br><span class=\"line\">\t\tf=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n<span class=\"number\">-1</span>;i&gt;<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f)\t<span class=\"comment\">//當前由同一個字符構成</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> nm=cf(s[i],l);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(nm==s[i].length())\t<span class=\"comment\">//如果乘的字符也全由這個字符構成</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tm=m*(nm+<span class=\"number\">1</span>)+nm;</span><br><span class=\"line\">\t\t\t\tll=lr=m;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>\t<span class=\"comment\">//乘的字符由多種字符構成</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tf=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> nl=cl(s[i]),nr=cr(s[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(s[i][<span class=\"number\">0</span>]==l)</span><br><span class=\"line\">\t\t\t\t\tll=(nl+<span class=\"number\">1</span>)*m+nl;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(s[i][s[i].length()<span class=\"number\">-1</span>]==r)</span><br><span class=\"line\">\t\t\t\t\tlr=(nr+<span class=\"number\">1</span>)*m+nr;</span><br><span class=\"line\">\t\t\t\tm=m*(nm+<span class=\"number\">1</span>)+nm;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(l==r)\t<span class=\"comment\">//如果可以把左右兩端的連續段連起來</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;s[i].length();++j)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s[i][j]==l)</span><br><span class=\"line\">\t\t\t\t\t\tm=max(ll+lr+<span class=\"number\">1</span>,m);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;s[i].length();++j)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s[i][j]==l)</span><br><span class=\"line\">\t\t\t\t\t\tm=max(m,ll+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s[i][j]==r)</span><br><span class=\"line\">\t\t\t\t\t\tm=max(m,lr+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;m&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-2\"><a href=\"#後記-2\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>多種情況的討論，需要耐心分析</p>\n<h1 id=\"F-Asya-And-Kittens\"><a href=\"#F-Asya-And-Kittens\" class=\"headerlink\" title=\"F. Asya And Kittens\"></a>F. Asya And Kittens</h1><h2 id=\"題意-3\"><a href=\"#題意-3\" class=\"headerlink\" title=\"題意\"></a>題意</h2><p>知道有一排數字，每個數字間一個隔板，隨後不斷給出兩個數的相鄰關係，給出關係后，它們之間的隔板就消失，成為同一個格子里的數，按照給出的相鄰關係，還原最開始的數字序列</p>\n<blockquote>\n<p>　<a href=\"http://codeforces.com/contest/1131/problem/F\" target=\"_blank\" rel=\"noopener\">題目入口</a></p>\n</blockquote>\n<h2 id=\"題解-3\"><a href=\"#題解-3\" class=\"headerlink\" title=\"題解\"></a>題解</h2><p>只需要用并查集維護元素位置的合併，然後用鏈錶模擬相鄰元素的拼接，最後輸出鏈錶即可</p>\n<h2 id=\"AC-CODE-3\"><a href=\"#AC-CODE-3\" class=\"headerlink\" title=\"AC CODE\"></a>AC CODE</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">150000</span>+<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[N],ran[N],n;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">D</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l,r,next;<span class=\"comment\">//l和r是這個塊的最左邊的最右邊的元素，next是尾指針</span></span><br><span class=\"line\">&#125;a[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fi</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x==f[x]?x:f[x]=fi(f[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">unite</span><span class=\"params\">(<span class=\"keyword\">int</span> aa,<span class=\"keyword\">int</span> bb)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=fi(aa),y=fi(bb);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==y)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ran[x]&gt;ran[y])\t<span class=\"comment\">//把y接到x上</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tf[y]=x;\t</span><br><span class=\"line\">\t\ta[a[y].r].next=a[x].l;\t<span class=\"comment\">//y的最右邊的尾指針指向x的最左邊</span></span><br><span class=\"line\">\t\ta[x].l=a[y].l;\t\t\t<span class=\"comment\">//x的最左邊變成y的最左邊那個</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>\t\t\t\t\t<span class=\"comment\">//把x接到y上，同理</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ran[x]==ran[x])</span><br><span class=\"line\">\t\t\tran[y]++;</span><br><span class=\"line\">\t\tf[x]=y;</span><br><span class=\"line\">\t\ta[a[x].r].next=a[y].l;</span><br><span class=\"line\">\t\ta[y].l=a[x].l;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tf[i]=i;</span><br><span class=\"line\">\t\tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ta[i].l=a[i].r=i;</span><br><span class=\"line\">\t\ta[i].next=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">\t\tunite(x,y);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"comment\">//找出鏈錶最左邊那個元素</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fi(i)==i)</span><br><span class=\"line\">\t\t\tx=a[i].l;\t\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(x!=<span class=\"number\">-1</span>)<span class=\"comment\">//輸出整條鏈錶</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;x&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">\t\tx=a[x].next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"後記-3\"><a href=\"#後記-3\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>注意鏈錶</p>"},{"title":"SuffixArray","date":"2019-04-14T11:44:52.000Z","mathjax":true,"_content":" ## 簡要\n　**專治字符串疑難雜症**\n  <!--more-->\n\n# 算法特質\n* 算法複雜度爲 $O(NlogN)$ 可以解決數據範圍在 $1e5$ 級別的問題  \n\n* 可以給出字符字符串所有後綴之間的信息，將所有後綴按字典序排序，並且給出相鄰排名的後綴的最長公共前綴 $(Longest Common Prefix)$,利用這些信息解決很多複雜的，樸素算法需要 $O(N^2)$ 才能解決的問題\n\n\n# 實例\n\n## POJ-1743 Musical Theme\n### 題意\n一首個的譜子以一個數字序列給出，求最長的重複出現的片段的長度，如果兩個片段是重複即兩個片段相同，如果一個片段的數值同時加上或減去上同一個值可以得到另一個，可認爲這兩個片段是相同的\n\n### 題解\n一個片段的數值同時加上或減去同一個值，片段裏相鄰兩個數值之間的差別不變，所有只要找出差分後的數組裏最長的出現超過兩次（不重疊）的最長子串的長度就可得到答案  \n二分答案，在得到的height數組中，把最長公共前綴大於答案 $cur$ 的後綴各自分成一些組，對每一個組裏看每個後綴起始點的最大值和最小值的差是否大於 $cur$ ，如果大於，說明這兩個後綴的前 $cur$ 個字符是相同的，$LCP>cur$ 且這 $cur$ 個字符不重疊。\n\n### 實現\n```C++\nbool check(int now)\n{\n\tint mx=-INF,mm=INF;\n\tfor(int i=2;i<=n;++i)\n\t\tif(height[i]>=now)\n\t\t{\n\t\t\tmx=max(mx,max(sa[i],sa[i-1]));\n\t\t\tmm=min(mm,min(sa[i],sa[i-1]));\n\t\t\tif(mx-mm>now)\n\t\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tmx=-INF,mm=INF;\n\treturn 0;\n}\n```\n\n## SPOJ-DISUBSTR Distinct Substrings\n### 題意\n求出一個字符串中本質不同的子串的個數\n\n### 題解\n可以先假設所有子串都不同，再利用 $height$ 數組去重，即可得到答案   \n如果每一個子串都不同，則存在$\\frac{len\\times (len+1)}{2}$ 個子串，兩個後綴之間最長公共前綴長度爲 $height[i]$ 從這兩個後綴的起點，長度爲 $1-height[i]$ 的子串都是相同的，如此去重即可得到答案\n\n### 實現\n```C++\nint ans=len*(len+1)/2;\nfor(int i=0;i<len;++i)\n\tans-=eight[i];\n```\n\n## SPOJ-REPEATS Repeats\n### 題意\n求一個字符串中，求中間出現連續重複的片段的重複次數。  \n如 $babb**abaabaabaaba**b$ 的重複次數爲4;\n\n### 題解\n枚舉每一個長度，利用後綴數組進行檢查   \n設重複的循環節長度爲 $l$ ，在連續的重複子串內部，$s[i]==s[i+l]$，那麼從這兩個點往前和往後一共可以匹配的長度 $L$，就是重複 $k-1$ 次的長度。則 $k=\\frac{L}{l}+1$，對每個長度進行枚舉，複雜度爲$O(n)+O(\\frac{n}{1})+O(\\frac{n}{2}+O(\\frac{n}{3})+...+O(1)=O(NlogN))$\n\n### 實現\n```C++\nfor(int i=1;i<=n;++i)//枚舉長度\n    {\n        for(int j=1;j+i<=n;j+=i)\n        {\n            int temp=LCM(j,j+i);\n            int k=j-(i-temp%i); //temp%i 是第一個不完整的循環節往後的匹配長度\n\t\t\t\t//這裏是回退讓這個循環節完整\n            temp=temp/i+1;\n            if(k>0&&LCM(k,k+i)>=i)//檢查回退是否真的得到一個完整循環節\n                temp++;\n            ans=max(ans,temp);\n        }\n    }\n```\n\n\n## POJ-3415 Common Substrings\n\n###  題意\n給出兩個字符串和一個整數 $k$ ，找出兩個子串位置不同的，長度大於 $k$ 的公共子串的個數\n\n### 題解\n對 $height$ 數組按 $k$ 進行分組，對每個組單獨計數，這裏需要單調棧優化才能滿足時間要求，兩個後綴之間的最長公共前綴爲他們在 $height$ 數組上他們之間的最小的 $height$ 的值，那麼對同一個後綴來說，往後走，$LCP$ 是單調的。詳見代碼註釋\n\n### 實現\n\n```C++\n//省略求Sufiix\nstruct D\n{\n\t//已合併到這裏的屬於A、B的後綴的個數,它後面到當前這些後綴的最小值\n    ll cnta,cntb,level;\n    D(ll _ca,ll _cb,ll _l):cnta(_ca),cntb(_cb),level(_l){}\n};\nchar a[N],b[N];\nint k,mid;\nll ans;\nvector<pair<int,int> > block;\nstack<D> st;\nvoid shrink(int tar)\n{\n    D _top1=st.top();st.pop();//取出兩個\n    D _top2=st.top();st.pop();\n    if(_top2.level<tar)//如果靠裏面的那個小於當前的值，就先直接結束本次合併，否則結算那些小於當前值的，回導致最小值改變\n    {\n        st.push(_top2);\n        _top1.level=tar;\n        st.push(_top1);\n        return ;\n    }\n    ll _cnt=_top1.cnta*_top2.cntb+_top1.cntb*_top2.cnta;//計數\n    ans+=_cnt*(_top2.level-k+1);\n    _top2.cnta+=_top1.cnta;//把兩個已結算的合併成一個\n    _top2.cntb+=_top1.cntb;\n    st.push(_top2);//合併後的放回棧中\n}\n\nvoid cal()\n{\n    if(int(block.size())<2)//如果這個分組裏只有一個後綴，沒有公共\n        return ;\n    while(!st.empty())//清空棧\n        st.pop();\n    for(int i=0;i<block.size();++i)//遍歷這個分組\n    {\n        pair<int,int> &p=block[i];//當前後綴\n        D temp(sa[p.first]<mid,sa[p.first]>mid,p.second);\n        if(st.empty()||p.second>=st.top().level)//如果比棧頂小\n            st.push(temp);\n        else\n        {\n            temp.level=0x3f3f3f3f;//先改成0x3f\n            st.push(temp);//入棧\n            while(st.top().level>p.second&&int(st.size())>1)//把大於當前值的塊都合併掉\n                shrink(p.second);\n            temp=st.top();st.pop();\n            temp.level=p.second;//合併完成好把棧頂改回當前的正確值\n            st.push(temp);\n        }\n    }\n    while((int)st.size()>1)\n        shrink(0);\n}\n\nint main()\n{\n    while(scanf(\"%d\",&k)==1&&k)\n    {\n        scanf(\"%s%s\",a,b);\n        int p=1;\n        int lena=strlen(a),lenb=strlen(b);\n        for(int i=0;i<lena;++i)\n            s[p++]=a[i];\n        mid=p;\n        s[p++]='*';\n        for(int i=0;i<lenb;++i)\n            s[p++]=b[i];\n        len=lena+lenb+1;\n        getsa();\n        geth();\n        ans=0;\n        for(int i=1;i<len;++i)\n        {\n            if(height[i+1]<k)//這裏說明到來了一個新的組\n            {\n\t\t\t\t//結算此個組\n\t\t\t\t//pair(x,y) x爲後綴的排名，y爲 x+1名的後綴與它的LCP\n                block.push_back(make_pair(i,0x3f3f3f3f));//這裏用0x3f因爲這個分組裏它後面沒有x+1名的後綴了\n                cal();\n                block.clear();\n            }\n            else\n                block.push_back(make_pair(i,height[i+1]));\n        }\n        block.push_back(make_pair(len,0x3f3f3f3f));\n        cal();\n        block.clear();\n        printf(\"%lld\\n\",ans);\n    }\n}\n```\n\n## SPOJ-PHRASES Relevant Phrases of Annihilation\n### 題意\n給出 $n$ 個字符串，求在所有串中都出現兩次（不重疊）的穿的最長長度\n\n### 題解\n先把所有字符串用各不相同的，並且不會出現在字符串中的字符隔開拼接成一個字符串，求出後綴數組   \n\n二分答案，把 $height$ 按答案分組，檢查組中每個字符串中是否都有兩個以上後綴，並且在每個字符串在組中的後綴的起始點最大值和最小值的差十分大於答案。   \n**看字符串在組中的後綴起始點最大值和最小值的差是否大於答案**，是判斷是否存在兩個不重疊的相同子串在字符串中的一個技巧\n\n### 實現\n\n\n```C++\nint belong[N];\nint n;\nchar str[N];\nvector<int> v[N];\nint mm[15],mx[15];\nbool check(int cur)\n{\n\tint cnt=-1;\n\tfor(int i=1;i<=len;++i)//利用vector分組的技巧\n\t{\n\t\tif(height[i]<cur)\n\t\t\tv[++cnt].clear();\n\t\tv[cnt].push_back(i);\n\t}\n\tfor(int i=0;i<=cnt;++i)//遍歷每個組\n\t{\n\t\tif(v[i].size()<2*n)//如果少於2*n個後綴在組中\n\t\t\tcontinue;\n\t\tmemset(mm,-1,sizeof(mm));//初始化最值\n\t\tmemset(mx,-1,sizeof(mx));\n\t\tfor(int j=0;j<v[i].size();++j)\n\t\t{\n\t\t\tint k=belong[sa[v[i][j]]];\n\t\t\tmm[k]=(mm[k]==-1?sa[v[i][j]]:min(mm[k],sa[v[i][j]]));\n\t\t\tmx[k]=(mx[k]==-1?sa[v[i][j]]:max(mx[k],sa[v[i][j]]));\n\t\t}\n\t\tbool flag=1;\n\t\tfor(int j=1;j<=n;++j)//檢查每個字符串的最值\n\t\t{\n\t\t\tif(mm[j]==-1||mx[j]-mm[j]<cur)\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\n```","source":"_posts/SuffixArray.md","raw":"---\ntitle: SuffixArray\ndate: 2019-04-14 19:44:52\nmathjax: true\ntags: [字符串]\ncategories:\n- ACM\n---\n ## 簡要\n　**專治字符串疑難雜症**\n  <!--more-->\n\n# 算法特質\n* 算法複雜度爲 $O(NlogN)$ 可以解決數據範圍在 $1e5$ 級別的問題  \n\n* 可以給出字符字符串所有後綴之間的信息，將所有後綴按字典序排序，並且給出相鄰排名的後綴的最長公共前綴 $(Longest Common Prefix)$,利用這些信息解決很多複雜的，樸素算法需要 $O(N^2)$ 才能解決的問題\n\n\n# 實例\n\n## POJ-1743 Musical Theme\n### 題意\n一首個的譜子以一個數字序列給出，求最長的重複出現的片段的長度，如果兩個片段是重複即兩個片段相同，如果一個片段的數值同時加上或減去上同一個值可以得到另一個，可認爲這兩個片段是相同的\n\n### 題解\n一個片段的數值同時加上或減去同一個值，片段裏相鄰兩個數值之間的差別不變，所有只要找出差分後的數組裏最長的出現超過兩次（不重疊）的最長子串的長度就可得到答案  \n二分答案，在得到的height數組中，把最長公共前綴大於答案 $cur$ 的後綴各自分成一些組，對每一個組裏看每個後綴起始點的最大值和最小值的差是否大於 $cur$ ，如果大於，說明這兩個後綴的前 $cur$ 個字符是相同的，$LCP>cur$ 且這 $cur$ 個字符不重疊。\n\n### 實現\n```C++\nbool check(int now)\n{\n\tint mx=-INF,mm=INF;\n\tfor(int i=2;i<=n;++i)\n\t\tif(height[i]>=now)\n\t\t{\n\t\t\tmx=max(mx,max(sa[i],sa[i-1]));\n\t\t\tmm=min(mm,min(sa[i],sa[i-1]));\n\t\t\tif(mx-mm>now)\n\t\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t\tmx=-INF,mm=INF;\n\treturn 0;\n}\n```\n\n## SPOJ-DISUBSTR Distinct Substrings\n### 題意\n求出一個字符串中本質不同的子串的個數\n\n### 題解\n可以先假設所有子串都不同，再利用 $height$ 數組去重，即可得到答案   \n如果每一個子串都不同，則存在$\\frac{len\\times (len+1)}{2}$ 個子串，兩個後綴之間最長公共前綴長度爲 $height[i]$ 從這兩個後綴的起點，長度爲 $1-height[i]$ 的子串都是相同的，如此去重即可得到答案\n\n### 實現\n```C++\nint ans=len*(len+1)/2;\nfor(int i=0;i<len;++i)\n\tans-=eight[i];\n```\n\n## SPOJ-REPEATS Repeats\n### 題意\n求一個字符串中，求中間出現連續重複的片段的重複次數。  \n如 $babb**abaabaabaaba**b$ 的重複次數爲4;\n\n### 題解\n枚舉每一個長度，利用後綴數組進行檢查   \n設重複的循環節長度爲 $l$ ，在連續的重複子串內部，$s[i]==s[i+l]$，那麼從這兩個點往前和往後一共可以匹配的長度 $L$，就是重複 $k-1$ 次的長度。則 $k=\\frac{L}{l}+1$，對每個長度進行枚舉，複雜度爲$O(n)+O(\\frac{n}{1})+O(\\frac{n}{2}+O(\\frac{n}{3})+...+O(1)=O(NlogN))$\n\n### 實現\n```C++\nfor(int i=1;i<=n;++i)//枚舉長度\n    {\n        for(int j=1;j+i<=n;j+=i)\n        {\n            int temp=LCM(j,j+i);\n            int k=j-(i-temp%i); //temp%i 是第一個不完整的循環節往後的匹配長度\n\t\t\t\t//這裏是回退讓這個循環節完整\n            temp=temp/i+1;\n            if(k>0&&LCM(k,k+i)>=i)//檢查回退是否真的得到一個完整循環節\n                temp++;\n            ans=max(ans,temp);\n        }\n    }\n```\n\n\n## POJ-3415 Common Substrings\n\n###  題意\n給出兩個字符串和一個整數 $k$ ，找出兩個子串位置不同的，長度大於 $k$ 的公共子串的個數\n\n### 題解\n對 $height$ 數組按 $k$ 進行分組，對每個組單獨計數，這裏需要單調棧優化才能滿足時間要求，兩個後綴之間的最長公共前綴爲他們在 $height$ 數組上他們之間的最小的 $height$ 的值，那麼對同一個後綴來說，往後走，$LCP$ 是單調的。詳見代碼註釋\n\n### 實現\n\n```C++\n//省略求Sufiix\nstruct D\n{\n\t//已合併到這裏的屬於A、B的後綴的個數,它後面到當前這些後綴的最小值\n    ll cnta,cntb,level;\n    D(ll _ca,ll _cb,ll _l):cnta(_ca),cntb(_cb),level(_l){}\n};\nchar a[N],b[N];\nint k,mid;\nll ans;\nvector<pair<int,int> > block;\nstack<D> st;\nvoid shrink(int tar)\n{\n    D _top1=st.top();st.pop();//取出兩個\n    D _top2=st.top();st.pop();\n    if(_top2.level<tar)//如果靠裏面的那個小於當前的值，就先直接結束本次合併，否則結算那些小於當前值的，回導致最小值改變\n    {\n        st.push(_top2);\n        _top1.level=tar;\n        st.push(_top1);\n        return ;\n    }\n    ll _cnt=_top1.cnta*_top2.cntb+_top1.cntb*_top2.cnta;//計數\n    ans+=_cnt*(_top2.level-k+1);\n    _top2.cnta+=_top1.cnta;//把兩個已結算的合併成一個\n    _top2.cntb+=_top1.cntb;\n    st.push(_top2);//合併後的放回棧中\n}\n\nvoid cal()\n{\n    if(int(block.size())<2)//如果這個分組裏只有一個後綴，沒有公共\n        return ;\n    while(!st.empty())//清空棧\n        st.pop();\n    for(int i=0;i<block.size();++i)//遍歷這個分組\n    {\n        pair<int,int> &p=block[i];//當前後綴\n        D temp(sa[p.first]<mid,sa[p.first]>mid,p.second);\n        if(st.empty()||p.second>=st.top().level)//如果比棧頂小\n            st.push(temp);\n        else\n        {\n            temp.level=0x3f3f3f3f;//先改成0x3f\n            st.push(temp);//入棧\n            while(st.top().level>p.second&&int(st.size())>1)//把大於當前值的塊都合併掉\n                shrink(p.second);\n            temp=st.top();st.pop();\n            temp.level=p.second;//合併完成好把棧頂改回當前的正確值\n            st.push(temp);\n        }\n    }\n    while((int)st.size()>1)\n        shrink(0);\n}\n\nint main()\n{\n    while(scanf(\"%d\",&k)==1&&k)\n    {\n        scanf(\"%s%s\",a,b);\n        int p=1;\n        int lena=strlen(a),lenb=strlen(b);\n        for(int i=0;i<lena;++i)\n            s[p++]=a[i];\n        mid=p;\n        s[p++]='*';\n        for(int i=0;i<lenb;++i)\n            s[p++]=b[i];\n        len=lena+lenb+1;\n        getsa();\n        geth();\n        ans=0;\n        for(int i=1;i<len;++i)\n        {\n            if(height[i+1]<k)//這裏說明到來了一個新的組\n            {\n\t\t\t\t//結算此個組\n\t\t\t\t//pair(x,y) x爲後綴的排名，y爲 x+1名的後綴與它的LCP\n                block.push_back(make_pair(i,0x3f3f3f3f));//這裏用0x3f因爲這個分組裏它後面沒有x+1名的後綴了\n                cal();\n                block.clear();\n            }\n            else\n                block.push_back(make_pair(i,height[i+1]));\n        }\n        block.push_back(make_pair(len,0x3f3f3f3f));\n        cal();\n        block.clear();\n        printf(\"%lld\\n\",ans);\n    }\n}\n```\n\n## SPOJ-PHRASES Relevant Phrases of Annihilation\n### 題意\n給出 $n$ 個字符串，求在所有串中都出現兩次（不重疊）的穿的最長長度\n\n### 題解\n先把所有字符串用各不相同的，並且不會出現在字符串中的字符隔開拼接成一個字符串，求出後綴數組   \n\n二分答案，把 $height$ 按答案分組，檢查組中每個字符串中是否都有兩個以上後綴，並且在每個字符串在組中的後綴的起始點最大值和最小值的差十分大於答案。   \n**看字符串在組中的後綴起始點最大值和最小值的差是否大於答案**，是判斷是否存在兩個不重疊的相同子串在字符串中的一個技巧\n\n### 實現\n\n\n```C++\nint belong[N];\nint n;\nchar str[N];\nvector<int> v[N];\nint mm[15],mx[15];\nbool check(int cur)\n{\n\tint cnt=-1;\n\tfor(int i=1;i<=len;++i)//利用vector分組的技巧\n\t{\n\t\tif(height[i]<cur)\n\t\t\tv[++cnt].clear();\n\t\tv[cnt].push_back(i);\n\t}\n\tfor(int i=0;i<=cnt;++i)//遍歷每個組\n\t{\n\t\tif(v[i].size()<2*n)//如果少於2*n個後綴在組中\n\t\t\tcontinue;\n\t\tmemset(mm,-1,sizeof(mm));//初始化最值\n\t\tmemset(mx,-1,sizeof(mx));\n\t\tfor(int j=0;j<v[i].size();++j)\n\t\t{\n\t\t\tint k=belong[sa[v[i][j]]];\n\t\t\tmm[k]=(mm[k]==-1?sa[v[i][j]]:min(mm[k],sa[v[i][j]]));\n\t\t\tmx[k]=(mx[k]==-1?sa[v[i][j]]:max(mx[k],sa[v[i][j]]));\n\t\t}\n\t\tbool flag=1;\n\t\tfor(int j=1;j<=n;++j)//檢查每個字符串的最值\n\t\t{\n\t\t\tif(mm[j]==-1||mx[j]-mm[j]<cur)\n\t\t\t{\n\t\t\t\tflag=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag)\n\t\t\treturn 1;\n\t}\n\treturn 0;\n}\n```","slug":"SuffixArray","published":1,"updated":"2019-04-14T14:01:28.181Z","_id":"cjugvn5f80000uei1p8bchxof","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>專治字符串疑難雜症</strong><br>  <a id=\"more\"></a></p>\n<h1 id=\"算法特質\"><a href=\"#算法特質\" class=\"headerlink\" title=\"算法特質\"></a>算法特質</h1><ul>\n<li><p>算法複雜度爲 $O(NlogN)$ 可以解決數據範圍在 $1e5$ 級別的問題  </p>\n</li>\n<li><p>可以給出字符字符串所有後綴之間的信息，將所有後綴按字典序排序，並且給出相鄰排名的後綴的最長公共前綴 $(Longest Common Prefix)$,利用這些信息解決很多複雜的，樸素算法需要 $O(N^2)$ 才能解決的問題</p>\n</li>\n</ul>\n<h1 id=\"實例\"><a href=\"#實例\" class=\"headerlink\" title=\"實例\"></a>實例</h1><h2 id=\"POJ-1743-Musical-Theme\"><a href=\"#POJ-1743-Musical-Theme\" class=\"headerlink\" title=\"POJ-1743 Musical Theme\"></a>POJ-1743 Musical Theme</h2><h3 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>一首個的譜子以一個數字序列給出，求最長的重複出現的片段的長度，如果兩個片段是重複即兩個片段相同，如果一個片段的數值同時加上或減去上同一個值可以得到另一個，可認爲這兩個片段是相同的</p>\n<h3 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>一個片段的數值同時加上或減去同一個值，片段裏相鄰兩個數值之間的差別不變，所有只要找出差分後的數組裏最長的出現超過兩次（不重疊）的最長子串的長度就可得到答案<br>二分答案，在得到的height數組中，把最長公共前綴大於答案 $cur$ 的後綴各自分成一些組，對每一個組裏看每個後綴起始點的最大值和最小值的差是否大於 $cur$ ，如果大於，說明這兩個後綴的前 $cur$ 個字符是相同的，$LCP&gt;cur$ 且這 $cur$ 個字符不重疊。</p>\n<h3 id=\"實現\"><a href=\"#實現\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> now)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mx=-INF,mm=INF;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(height[i]&gt;=now)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tmx=max(mx,max(sa[i],sa[i<span class=\"number\">-1</span>]));</span><br><span class=\"line\">\t\t\tmm=min(mm,min(sa[i],sa[i<span class=\"number\">-1</span>]));</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mx-mm&gt;now)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tmx=-INF,mm=INF;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SPOJ-DISUBSTR-Distinct-Substrings\"><a href=\"#SPOJ-DISUBSTR-Distinct-Substrings\" class=\"headerlink\" title=\"SPOJ-DISUBSTR Distinct Substrings\"></a>SPOJ-DISUBSTR Distinct Substrings</h2><h3 id=\"題意-1\"><a href=\"#題意-1\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>求出一個字符串中本質不同的子串的個數</p>\n<h3 id=\"題解-1\"><a href=\"#題解-1\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>可以先假設所有子串都不同，再利用 $height$ 數組去重，即可得到答案<br>如果每一個子串都不同，則存在$\\frac{len\\times (len+1)}{2}$ 個子串，兩個後綴之間最長公共前綴長度爲 $height[i]$ 從這兩個後綴的起點，長度爲 $1-height[i]$ 的子串都是相同的，如此去重即可得到答案</p>\n<h3 id=\"實現-1\"><a href=\"#實現-1\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> ans=len*(len+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;++i)</span><br><span class=\"line\">\tans-=eight[i];</span><br></pre></td></tr></table></figure>\n<h2 id=\"SPOJ-REPEATS-Repeats\"><a href=\"#SPOJ-REPEATS-Repeats\" class=\"headerlink\" title=\"SPOJ-REPEATS Repeats\"></a>SPOJ-REPEATS Repeats</h2><h3 id=\"題意-2\"><a href=\"#題意-2\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>求一個字符串中，求中間出現連續重複的片段的重複次數。<br>如 $babb<strong>abaabaabaaba</strong>b$ 的重複次數爲4;</p>\n<h3 id=\"題解-2\"><a href=\"#題解-2\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>枚舉每一個長度，利用後綴數組進行檢查<br>設重複的循環節長度爲 $l$ ，在連續的重複子串內部，$s[i]==s[i+l]$，那麼從這兩個點往前和往後一共可以匹配的長度 $L$，就是重複 $k-1$ 次的長度。則 $k=\\frac{L}{l}+1$，對每個長度進行枚舉，複雜度爲$O(n)+O(\\frac{n}{1})+O(\\frac{n}{2}+O(\\frac{n}{3})+…+O(1)=O(NlogN))$</p>\n<h3 id=\"實現-2\"><a href=\"#實現-2\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"comment\">//枚舉長度</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j+i&lt;=n;j+=i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp=LCM(j,j+i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> k=j-(i-temp%i); <span class=\"comment\">//temp%i 是第一個不完整的循環節往後的匹配長度</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//這裏是回退讓這個循環節完整</span></span><br><span class=\"line\">            temp=temp/i+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k&gt;<span class=\"number\">0</span>&amp;&amp;LCM(k,k+i)&gt;=i)<span class=\"comment\">//檢查回退是否真的得到一個完整循環節</span></span><br><span class=\"line\">                temp++;</span><br><span class=\"line\">            ans=max(ans,temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"POJ-3415-Common-Substrings\"><a href=\"#POJ-3415-Common-Substrings\" class=\"headerlink\" title=\"POJ-3415 Common Substrings\"></a>POJ-3415 Common Substrings</h2><h3 id=\"題意-3\"><a href=\"#題意-3\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>給出兩個字符串和一個整數 $k$ ，找出兩個子串位置不同的，長度大於 $k$ 的公共子串的個數</p>\n<h3 id=\"題解-3\"><a href=\"#題解-3\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>對 $height$ 數組按 $k$ 進行分組，對每個組單獨計數，這裏需要單調棧優化才能滿足時間要求，兩個後綴之間的最長公共前綴爲他們在 $height$ 數組上他們之間的最小的 $height$ 的值，那麼對同一個後綴來說，往後走，$LCP$ 是單調的。詳見代碼註釋</p>\n<h3 id=\"實現-3\"><a href=\"#實現-3\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//省略求Sufiix</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">D</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//已合併到這裏的屬於A、B的後綴的個數,它後面到當前這些後綴的最小值</span></span><br><span class=\"line\">    ll cnta,cntb,level;</span><br><span class=\"line\">    D(ll _ca,ll _cb,ll _l):cnta(_ca),cntb(_cb),level(_l)&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[N],b[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> k,mid;</span><br><span class=\"line\">ll ans;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; &gt; block;</span><br><span class=\"line\"><span class=\"built_in\">stack</span>&lt;D&gt; st;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shrink</span><span class=\"params\">(<span class=\"keyword\">int</span> tar)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    D _top1=st.top();st.pop();<span class=\"comment\">//取出兩個</span></span><br><span class=\"line\">    D _top2=st.top();st.pop();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(_top2.level&lt;tar)<span class=\"comment\">//如果靠裏面的那個小於當前的值，就先直接結束本次合併，否則結算那些小於當前值的，回導致最小值改變</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        st.push(_top2);</span><br><span class=\"line\">        _top1.level=tar;</span><br><span class=\"line\">        st.push(_top1);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ll _cnt=_top1.cnta*_top2.cntb+_top1.cntb*_top2.cnta;<span class=\"comment\">//計數</span></span><br><span class=\"line\">    ans+=_cnt*(_top2.level-k+<span class=\"number\">1</span>);</span><br><span class=\"line\">    _top2.cnta+=_top1.cnta;<span class=\"comment\">//把兩個已結算的合併成一個</span></span><br><span class=\"line\">    _top2.cntb+=_top1.cntb;</span><br><span class=\"line\">    st.push(_top2);<span class=\"comment\">//合併後的放回棧中</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cal</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">int</span>(block.size())&lt;<span class=\"number\">2</span>)<span class=\"comment\">//如果這個分組裏只有一個後綴，沒有公共</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!st.empty())<span class=\"comment\">//清空棧</span></span><br><span class=\"line\">        st.pop();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;block.size();++i)<span class=\"comment\">//遍歷這個分組</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; &amp;p=block[i];<span class=\"comment\">//當前後綴</span></span><br><span class=\"line\">        <span class=\"function\">D <span class=\"title\">temp</span><span class=\"params\">(sa[p.first]&lt;mid,sa[p.first]&gt;mid,p.second)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(st.empty()||p.second&gt;=st.top().level)<span class=\"comment\">//如果比棧頂小</span></span><br><span class=\"line\">            st.push(temp);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp.level=<span class=\"number\">0x3f3f3f3f</span>;<span class=\"comment\">//先改成0x3f</span></span><br><span class=\"line\">            st.push(temp);<span class=\"comment\">//入棧</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(st.top().level&gt;p.second&amp;&amp;<span class=\"keyword\">int</span>(st.size())&gt;<span class=\"number\">1</span>)<span class=\"comment\">//把大於當前值的塊都合併掉</span></span><br><span class=\"line\">                shrink(p.second);</span><br><span class=\"line\">            temp=st.top();st.pop();</span><br><span class=\"line\">            temp.level=p.second;<span class=\"comment\">//合併完成好把棧頂改回當前的正確值</span></span><br><span class=\"line\">            st.push(temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>((<span class=\"keyword\">int</span>)st.size()&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">        shrink(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;k)==<span class=\"number\">1</span>&amp;&amp;k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s%s\"</span>,a,b);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> lena=<span class=\"built_in\">strlen</span>(a),lenb=<span class=\"built_in\">strlen</span>(b);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;lena;++i)</span><br><span class=\"line\">            s[p++]=a[i];</span><br><span class=\"line\">        mid=p;</span><br><span class=\"line\">        s[p++]=<span class=\"string\">'*'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;lenb;++i)</span><br><span class=\"line\">            s[p++]=b[i];</span><br><span class=\"line\">        len=lena+lenb+<span class=\"number\">1</span>;</span><br><span class=\"line\">        getsa();</span><br><span class=\"line\">        geth();</span><br><span class=\"line\">        ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;len;++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(height[i+<span class=\"number\">1</span>]&lt;k)<span class=\"comment\">//這裏說明到來了一個新的組</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//結算此個組</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//pair(x,y) x爲後綴的排名，y爲 x+1名的後綴與它的LCP</span></span><br><span class=\"line\">                block.push_back(make_pair(i,<span class=\"number\">0x3f3f3f3f</span>));<span class=\"comment\">//這裏用0x3f因爲這個分組裏它後面沒有x+1名的後綴了</span></span><br><span class=\"line\">                cal();</span><br><span class=\"line\">                block.clear();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                block.push_back(make_pair(i,height[i+<span class=\"number\">1</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        block.push_back(make_pair(len,<span class=\"number\">0x3f3f3f3f</span>));</span><br><span class=\"line\">        cal();</span><br><span class=\"line\">        block.clear();</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SPOJ-PHRASES-Relevant-Phrases-of-Annihilation\"><a href=\"#SPOJ-PHRASES-Relevant-Phrases-of-Annihilation\" class=\"headerlink\" title=\"SPOJ-PHRASES Relevant Phrases of Annihilation\"></a>SPOJ-PHRASES Relevant Phrases of Annihilation</h2><h3 id=\"題意-4\"><a href=\"#題意-4\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>給出 $n$ 個字符串，求在所有串中都出現兩次（不重疊）的穿的最長長度</p>\n<h3 id=\"題解-4\"><a href=\"#題解-4\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>先把所有字符串用各不相同的，並且不會出現在字符串中的字符隔開拼接成一個字符串，求出後綴數組   </p>\n<p>二分答案，把 $height$ 按答案分組，檢查組中每個字符串中是否都有兩個以上後綴，並且在每個字符串在組中的後綴的起始點最大值和最小值的差十分大於答案。<br><strong>看字符串在組中的後綴起始點最大值和最小值的差是否大於答案</strong>，是判斷是否存在兩個不重疊的相同子串在字符串中的一個技巧</p>\n<h3 id=\"實現-4\"><a href=\"#實現-4\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> belong[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str[N];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> mm[<span class=\"number\">15</span>],mx[<span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=len;++i)<span class=\"comment\">//利用vector分組的技巧</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(height[i]&lt;cur)</span><br><span class=\"line\">\t\t\tv[++cnt].clear();</span><br><span class=\"line\">\t\tv[cnt].push_back(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=cnt;++i)<span class=\"comment\">//遍歷每個組</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(v[i].size()&lt;<span class=\"number\">2</span>*n)<span class=\"comment\">//如果少於2*n個後綴在組中</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(mm,<span class=\"number\">-1</span>,<span class=\"keyword\">sizeof</span>(mm));<span class=\"comment\">//初始化最值</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(mx,<span class=\"number\">-1</span>,<span class=\"keyword\">sizeof</span>(mx));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;v[i].size();++j)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> k=belong[sa[v[i][j]]];</span><br><span class=\"line\">\t\t\tmm[k]=(mm[k]==<span class=\"number\">-1</span>?sa[v[i][j]]:min(mm[k],sa[v[i][j]]));</span><br><span class=\"line\">\t\t\tmx[k]=(mx[k]==<span class=\"number\">-1</span>?sa[v[i][j]]:max(mx[k],sa[v[i][j]]));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">bool</span> flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;++j)<span class=\"comment\">//檢查每個字符串的最值</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mm[j]==<span class=\"number\">-1</span>||mx[j]-mm[j]&lt;cur)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(flag)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"簡要\"><a href=\"#簡要\" class=\"headerlink\" title=\"簡要\"></a>簡要</h2><p>　<strong>專治字符串疑難雜症</strong><br>","more":"</p>\n<h1 id=\"算法特質\"><a href=\"#算法特質\" class=\"headerlink\" title=\"算法特質\"></a>算法特質</h1><ul>\n<li><p>算法複雜度爲 $O(NlogN)$ 可以解決數據範圍在 $1e5$ 級別的問題  </p>\n</li>\n<li><p>可以給出字符字符串所有後綴之間的信息，將所有後綴按字典序排序，並且給出相鄰排名的後綴的最長公共前綴 $(Longest Common Prefix)$,利用這些信息解決很多複雜的，樸素算法需要 $O(N^2)$ 才能解決的問題</p>\n</li>\n</ul>\n<h1 id=\"實例\"><a href=\"#實例\" class=\"headerlink\" title=\"實例\"></a>實例</h1><h2 id=\"POJ-1743-Musical-Theme\"><a href=\"#POJ-1743-Musical-Theme\" class=\"headerlink\" title=\"POJ-1743 Musical Theme\"></a>POJ-1743 Musical Theme</h2><h3 id=\"題意\"><a href=\"#題意\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>一首個的譜子以一個數字序列給出，求最長的重複出現的片段的長度，如果兩個片段是重複即兩個片段相同，如果一個片段的數值同時加上或減去上同一個值可以得到另一個，可認爲這兩個片段是相同的</p>\n<h3 id=\"題解\"><a href=\"#題解\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>一個片段的數值同時加上或減去同一個值，片段裏相鄰兩個數值之間的差別不變，所有只要找出差分後的數組裏最長的出現超過兩次（不重疊）的最長子串的長度就可得到答案<br>二分答案，在得到的height數組中，把最長公共前綴大於答案 $cur$ 的後綴各自分成一些組，對每一個組裏看每個後綴起始點的最大值和最小值的差是否大於 $cur$ ，如果大於，說明這兩個後綴的前 $cur$ 個字符是相同的，$LCP&gt;cur$ 且這 $cur$ 個字符不重疊。</p>\n<h3 id=\"實現\"><a href=\"#實現\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> now)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> mx=-INF,mm=INF;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(height[i]&gt;=now)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tmx=max(mx,max(sa[i],sa[i<span class=\"number\">-1</span>]));</span><br><span class=\"line\">\t\t\tmm=min(mm,min(sa[i],sa[i<span class=\"number\">-1</span>]));</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mx-mm&gt;now)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tmx=-INF,mm=INF;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SPOJ-DISUBSTR-Distinct-Substrings\"><a href=\"#SPOJ-DISUBSTR-Distinct-Substrings\" class=\"headerlink\" title=\"SPOJ-DISUBSTR Distinct Substrings\"></a>SPOJ-DISUBSTR Distinct Substrings</h2><h3 id=\"題意-1\"><a href=\"#題意-1\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>求出一個字符串中本質不同的子串的個數</p>\n<h3 id=\"題解-1\"><a href=\"#題解-1\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>可以先假設所有子串都不同，再利用 $height$ 數組去重，即可得到答案<br>如果每一個子串都不同，則存在$\\frac{len\\times (len+1)}{2}$ 個子串，兩個後綴之間最長公共前綴長度爲 $height[i]$ 從這兩個後綴的起點，長度爲 $1-height[i]$ 的子串都是相同的，如此去重即可得到答案</p>\n<h3 id=\"實現-1\"><a href=\"#實現-1\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> ans=len*(len+<span class=\"number\">1</span>)/<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;++i)</span><br><span class=\"line\">\tans-=eight[i];</span><br></pre></td></tr></table></figure>\n<h2 id=\"SPOJ-REPEATS-Repeats\"><a href=\"#SPOJ-REPEATS-Repeats\" class=\"headerlink\" title=\"SPOJ-REPEATS Repeats\"></a>SPOJ-REPEATS Repeats</h2><h3 id=\"題意-2\"><a href=\"#題意-2\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>求一個字符串中，求中間出現連續重複的片段的重複次數。<br>如 $babb<strong>abaabaabaaba</strong>b$ 的重複次數爲4;</p>\n<h3 id=\"題解-2\"><a href=\"#題解-2\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>枚舉每一個長度，利用後綴數組進行檢查<br>設重複的循環節長度爲 $l$ ，在連續的重複子串內部，$s[i]==s[i+l]$，那麼從這兩個點往前和往後一共可以匹配的長度 $L$，就是重複 $k-1$ 次的長度。則 $k=\\frac{L}{l}+1$，對每個長度進行枚舉，複雜度爲$O(n)+O(\\frac{n}{1})+O(\\frac{n}{2}+O(\\frac{n}{3})+…+O(1)=O(NlogN))$</p>\n<h3 id=\"實現-2\"><a href=\"#實現-2\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"comment\">//枚舉長度</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j+i&lt;=n;j+=i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp=LCM(j,j+i);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> k=j-(i-temp%i); <span class=\"comment\">//temp%i 是第一個不完整的循環節往後的匹配長度</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//這裏是回退讓這個循環節完整</span></span><br><span class=\"line\">            temp=temp/i+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(k&gt;<span class=\"number\">0</span>&amp;&amp;LCM(k,k+i)&gt;=i)<span class=\"comment\">//檢查回退是否真的得到一個完整循環節</span></span><br><span class=\"line\">                temp++;</span><br><span class=\"line\">            ans=max(ans,temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"POJ-3415-Common-Substrings\"><a href=\"#POJ-3415-Common-Substrings\" class=\"headerlink\" title=\"POJ-3415 Common Substrings\"></a>POJ-3415 Common Substrings</h2><h3 id=\"題意-3\"><a href=\"#題意-3\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>給出兩個字符串和一個整數 $k$ ，找出兩個子串位置不同的，長度大於 $k$ 的公共子串的個數</p>\n<h3 id=\"題解-3\"><a href=\"#題解-3\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>對 $height$ 數組按 $k$ 進行分組，對每個組單獨計數，這裏需要單調棧優化才能滿足時間要求，兩個後綴之間的最長公共前綴爲他們在 $height$ 數組上他們之間的最小的 $height$ 的值，那麼對同一個後綴來說，往後走，$LCP$ 是單調的。詳見代碼註釋</p>\n<h3 id=\"實現-3\"><a href=\"#實現-3\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//省略求Sufiix</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">D</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//已合併到這裏的屬於A、B的後綴的個數,它後面到當前這些後綴的最小值</span></span><br><span class=\"line\">    ll cnta,cntb,level;</span><br><span class=\"line\">    D(ll _ca,ll _cb,ll _l):cnta(_ca),cntb(_cb),level(_l)&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">char</span> a[N],b[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> k,mid;</span><br><span class=\"line\">ll ans;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; &gt; block;</span><br><span class=\"line\"><span class=\"built_in\">stack</span>&lt;D&gt; st;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shrink</span><span class=\"params\">(<span class=\"keyword\">int</span> tar)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    D _top1=st.top();st.pop();<span class=\"comment\">//取出兩個</span></span><br><span class=\"line\">    D _top2=st.top();st.pop();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(_top2.level&lt;tar)<span class=\"comment\">//如果靠裏面的那個小於當前的值，就先直接結束本次合併，否則結算那些小於當前值的，回導致最小值改變</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        st.push(_top2);</span><br><span class=\"line\">        _top1.level=tar;</span><br><span class=\"line\">        st.push(_top1);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ll _cnt=_top1.cnta*_top2.cntb+_top1.cntb*_top2.cnta;<span class=\"comment\">//計數</span></span><br><span class=\"line\">    ans+=_cnt*(_top2.level-k+<span class=\"number\">1</span>);</span><br><span class=\"line\">    _top2.cnta+=_top1.cnta;<span class=\"comment\">//把兩個已結算的合併成一個</span></span><br><span class=\"line\">    _top2.cntb+=_top1.cntb;</span><br><span class=\"line\">    st.push(_top2);<span class=\"comment\">//合併後的放回棧中</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cal</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">int</span>(block.size())&lt;<span class=\"number\">2</span>)<span class=\"comment\">//如果這個分組裏只有一個後綴，沒有公共</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!st.empty())<span class=\"comment\">//清空棧</span></span><br><span class=\"line\">        st.pop();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;block.size();++i)<span class=\"comment\">//遍歷這個分組</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        pair&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt; &amp;p=block[i];<span class=\"comment\">//當前後綴</span></span><br><span class=\"line\">        <span class=\"function\">D <span class=\"title\">temp</span><span class=\"params\">(sa[p.first]&lt;mid,sa[p.first]&gt;mid,p.second)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(st.empty()||p.second&gt;=st.top().level)<span class=\"comment\">//如果比棧頂小</span></span><br><span class=\"line\">            st.push(temp);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            temp.level=<span class=\"number\">0x3f3f3f3f</span>;<span class=\"comment\">//先改成0x3f</span></span><br><span class=\"line\">            st.push(temp);<span class=\"comment\">//入棧</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(st.top().level&gt;p.second&amp;&amp;<span class=\"keyword\">int</span>(st.size())&gt;<span class=\"number\">1</span>)<span class=\"comment\">//把大於當前值的塊都合併掉</span></span><br><span class=\"line\">                shrink(p.second);</span><br><span class=\"line\">            temp=st.top();st.pop();</span><br><span class=\"line\">            temp.level=p.second;<span class=\"comment\">//合併完成好把棧頂改回當前的正確值</span></span><br><span class=\"line\">            st.push(temp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>((<span class=\"keyword\">int</span>)st.size()&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">        shrink(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;k)==<span class=\"number\">1</span>&amp;&amp;k)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s%s\"</span>,a,b);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> lena=<span class=\"built_in\">strlen</span>(a),lenb=<span class=\"built_in\">strlen</span>(b);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;lena;++i)</span><br><span class=\"line\">            s[p++]=a[i];</span><br><span class=\"line\">        mid=p;</span><br><span class=\"line\">        s[p++]=<span class=\"string\">'*'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;lenb;++i)</span><br><span class=\"line\">            s[p++]=b[i];</span><br><span class=\"line\">        len=lena+lenb+<span class=\"number\">1</span>;</span><br><span class=\"line\">        getsa();</span><br><span class=\"line\">        geth();</span><br><span class=\"line\">        ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;len;++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(height[i+<span class=\"number\">1</span>]&lt;k)<span class=\"comment\">//這裏說明到來了一個新的組</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//結算此個組</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//pair(x,y) x爲後綴的排名，y爲 x+1名的後綴與它的LCP</span></span><br><span class=\"line\">                block.push_back(make_pair(i,<span class=\"number\">0x3f3f3f3f</span>));<span class=\"comment\">//這裏用0x3f因爲這個分組裏它後面沒有x+1名的後綴了</span></span><br><span class=\"line\">                cal();</span><br><span class=\"line\">                block.clear();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                block.push_back(make_pair(i,height[i+<span class=\"number\">1</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        block.push_back(make_pair(len,<span class=\"number\">0x3f3f3f3f</span>));</span><br><span class=\"line\">        cal();</span><br><span class=\"line\">        block.clear();</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SPOJ-PHRASES-Relevant-Phrases-of-Annihilation\"><a href=\"#SPOJ-PHRASES-Relevant-Phrases-of-Annihilation\" class=\"headerlink\" title=\"SPOJ-PHRASES Relevant Phrases of Annihilation\"></a>SPOJ-PHRASES Relevant Phrases of Annihilation</h2><h3 id=\"題意-4\"><a href=\"#題意-4\" class=\"headerlink\" title=\"題意\"></a>題意</h3><p>給出 $n$ 個字符串，求在所有串中都出現兩次（不重疊）的穿的最長長度</p>\n<h3 id=\"題解-4\"><a href=\"#題解-4\" class=\"headerlink\" title=\"題解\"></a>題解</h3><p>先把所有字符串用各不相同的，並且不會出現在字符串中的字符隔開拼接成一個字符串，求出後綴數組   </p>\n<p>二分答案，把 $height$ 按答案分組，檢查組中每個字符串中是否都有兩個以上後綴，並且在每個字符串在組中的後綴的起始點最大值和最小值的差十分大於答案。<br><strong>看字符串在組中的後綴起始點最大值和最小值的差是否大於答案</strong>，是判斷是否存在兩個不重疊的相同子串在字符串中的一個技巧</p>\n<h3 id=\"實現-4\"><a href=\"#實現-4\" class=\"headerlink\" title=\"實現\"></a>實現</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> belong[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">char</span> str[N];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; v[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> mm[<span class=\"number\">15</span>],mx[<span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> cur)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> cnt=<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=len;++i)<span class=\"comment\">//利用vector分組的技巧</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(height[i]&lt;cur)</span><br><span class=\"line\">\t\t\tv[++cnt].clear();</span><br><span class=\"line\">\t\tv[cnt].push_back(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=cnt;++i)<span class=\"comment\">//遍歷每個組</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(v[i].size()&lt;<span class=\"number\">2</span>*n)<span class=\"comment\">//如果少於2*n個後綴在組中</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(mm,<span class=\"number\">-1</span>,<span class=\"keyword\">sizeof</span>(mm));<span class=\"comment\">//初始化最值</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(mx,<span class=\"number\">-1</span>,<span class=\"keyword\">sizeof</span>(mx));</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;v[i].size();++j)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> k=belong[sa[v[i][j]]];</span><br><span class=\"line\">\t\t\tmm[k]=(mm[k]==<span class=\"number\">-1</span>?sa[v[i][j]]:min(mm[k],sa[v[i][j]]));</span><br><span class=\"line\">\t\t\tmx[k]=(mx[k]==<span class=\"number\">-1</span>?sa[v[i][j]]:max(mx[k],sa[v[i][j]]));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">bool</span> flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;++j)<span class=\"comment\">//檢查每個字符串的最值</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mm[j]==<span class=\"number\">-1</span>||mx[j]-mm[j]&lt;cur)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(flag)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjugu20e400007di1s4mt2zrq","category_id":"cjugu20e900027di169j9miwk","_id":"cjugu20ee00087di14v9f5sfu"},{"post_id":"cjugu20e800017di149oxi0ec","category_id":"cjugu20e900027di169j9miwk","_id":"cjugu20ee000b7di12mcu1n0d"},{"post_id":"cjugu20eb00047di1pzmk100o","category_id":"cjugu20e900027di169j9miwk","_id":"cjugu20ef000e7di1w91imjv5"},{"post_id":"cjugu20hf000m7di1lmve24l1","category_id":"cjugu20e900027di169j9miwk","_id":"cjugu20hi000r7di1ztg7ei9k"},{"post_id":"cjugu20hg000n7di12bpguj0i","category_id":"cjugu20e900027di169j9miwk","_id":"cjugu20hi000s7di15zkns9ew"},{"post_id":"cjugvn5f80000uei1p8bchxof","category_id":"cjugu20e900027di169j9miwk","_id":"cjugzfzot000cuei171pirqqd"}],"PostTag":[{"post_id":"cjugu20e400007di1s4mt2zrq","tag_id":"cjugu20eb00037di1lmhw37cx","_id":"cjugu20ee000a7di18k8ukhjl"},{"post_id":"cjugu20e400007di1s4mt2zrq","tag_id":"cjugu20ec00067di18dpvorw7","_id":"cjugu20ee000c7di1fvcwhhkl"},{"post_id":"cjugu20e800017di149oxi0ec","tag_id":"cjugu20eb00037di1lmhw37cx","_id":"cjugu20ef000h7di190hmi8iy"},{"post_id":"cjugu20e800017di149oxi0ec","tag_id":"cjugu20ec00067di18dpvorw7","_id":"cjugu20ef000i7di1ne3a6ai6"},{"post_id":"cjugu20e800017di149oxi0ec","tag_id":"cjugu20ef000f7di1jqz9tnco","_id":"cjugu20eg000j7di1ylag0vnl"},{"post_id":"cjugu20eb00047di1pzmk100o","tag_id":"cjugu20ef000g7di139p3t613","_id":"cjugu20eg000k7di11o4wpeum"},{"post_id":"cjugu20hf000m7di1lmve24l1","tag_id":"cjugu20eb00037di1lmhw37cx","_id":"cjugu20hh000o7di1vqd28y8n"},{"post_id":"cjugu20hf000m7di1lmve24l1","tag_id":"cjugu20ec00067di18dpvorw7","_id":"cjugu20hh000q7di1uzpifdji"},{"post_id":"cjugu20hg000n7di12bpguj0i","tag_id":"cjugu20hh000p7di135j1109e","_id":"cjugu20hi000t7di12vivu55u"},{"post_id":"cjugu20hg000n7di12bpguj0i","tag_id":"cjugu20ec00067di18dpvorw7","_id":"cjugu20hi000u7di1t9jewgqd"},{"post_id":"cjugu20hg000n7di12bpguj0i","tag_id":"cjugu20ef000g7di139p3t613","_id":"cjugu20hi000v7di1fkuqqknn"},{"post_id":"cjugvn5f80000uei1p8bchxof","tag_id":"cjugu20ef000g7di139p3t613","_id":"cjugzfzot000buei1mq4zop3m"}],"Tag":[{"name":"數學","_id":"cjugu20eb00037di1lmhw37cx"},{"name":"DP","_id":"cjugu20ec00067di18dpvorw7"},{"name":"樹","_id":"cjugu20ef000f7di1jqz9tnco"},{"name":"字符串","_id":"cjugu20ef000g7di139p3t613"},{"name":"圖論","_id":"cjugu20hh000p7di135j1109e"}]}}